[
    {
        "name": "CWE15_External_Control_of_System_or_Configuration_Setting__w32_03_bad",
        "code": "void CWE15_External_Control_of_System_or_Configuration_Setting__w32_03_bad()\n{\n    char * data;\n    char dataBuffer[100] = \"\";\n    data = dataBuffer;\n    if(5==5)\n    {\n        {\n            WSADATA wsaData;\n            BOOL wsaDataInit = FALSE;\n            SOCKET listenSocket = INVALID_SOCKET;\n            SOCKET acceptSocket = INVALID_SOCKET;\n            struct sockaddr_in service;\n            int recvResult;\n            do\n            {\n                if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)\n                {\n                    break;\n                }\n                wsaDataInit = 1;\n                listenSocket = socket(PF_INET, SOCK_STREAM, 0);\n                if (listenSocket == INVALID_SOCKET)\n                {\n                    break;\n                }\n                memset(&service, 0, sizeof(service));\n                service.sin_family = AF_INET;\n                service.sin_addr.s_addr = INADDR_ANY;\n                service.sin_port = htons(LISTEN_PORT);\n                if (SOCKET_ERROR == bind(listenSocket, (struct sockaddr*)&service, sizeof(service)))\n                {\n                    break;\n                }\n                if (SOCKET_ERROR == listen(listenSocket, LISTEN_BACKLOG))\n                {\n                    break;\n                }\n                acceptSocket = accept(listenSocket, NULL, NULL);\n                if (acceptSocket == INVALID_SOCKET)\n                {\n                    break;\n                }\n                /* INCIDENTAL CWE 188 - reliance on data memory layout\n                 * recv and friends return \"number of bytes\" received\n                 * char's on our system, however, may not be \"octets\" (8-bit\n                 * bytes) but could be just about anything.  Also,\n                 * even if the external environment is ASCII or UTF8,\n                 * the ANSI/ISO C standard does not dictate that the\n                 * character set used by the actual language or character\n                 * constants matches.\n                 *\n                 * In practice none of these are usually issues...\n                 */\n                /* FLAW: read the new hostname from a network socket */\n                recvResult = recv(acceptSocket, data, 100 - 1, 0);\n                if (recvResult == SOCKET_ERROR || recvResult == 0)\n                {\n                    break;\n                }\n                data[recvResult] = '\\0';\n            }\n            while (0);\n            if (acceptSocket != INVALID_SOCKET)\n            {\n                closesocket(acceptSocket);\n            }\n            if (listenSocket != INVALID_SOCKET)\n            {\n                closesocket(listenSocket);\n            }\n            if (wsaDataInit)\n            {\n                WSACleanup();\n            }\n        }\n    }\n    /* POTENTIAL FLAW: set the hostname to data obtained from a potentially external source */\n    if (!SetComputerNameA(data))\n    {\n        printLine(\"Failure setting computer name\");\n        exit(1);\n    }\n}"
    },
    {
        "name": "goodG2B1",
        "code": "static void goodG2B1()\n{\n    char * data;\n    char dataBuffer[100] = \"\";\n    data = dataBuffer;\n    if(5!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        /* FIX: get the hostname from a string literal */\n        strcpy(data, \"hostname\");\n    }\n    /* POTENTIAL FLAW: set the hostname to data obtained from a potentially external source */\n    if (!SetComputerNameA(data))\n    {\n        printLine(\"Failure setting computer name\");\n        exit(1);\n    }\n}"
    },
    {
        "name": "goodG2B2",
        "code": "static void goodG2B2()\n{\n    char * data;\n    char dataBuffer[100] = \"\";\n    data = dataBuffer;\n    if(5==5)\n    {\n        /* FIX: get the hostname from a string literal */\n        strcpy(data, \"hostname\");\n    }\n    /* POTENTIAL FLAW: set the hostname to data obtained from a potentially external source */\n    if (!SetComputerNameA(data))\n    {\n        printLine(\"Failure setting computer name\");\n        exit(1);\n    }\n}"
    },
    {
        "name": "CWE15_External_Control_of_System_or_Configuration_Setting__w32_03_good",
        "code": "void CWE15_External_Control_of_System_or_Configuration_Setting__w32_03_good()\n{\n    goodG2B1();\n    goodG2B2();\n}"
    }
]