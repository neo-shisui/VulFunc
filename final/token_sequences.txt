["translation_unit"]
["translation_unit"]
["translation_unit"]
["translation_unit"]
["translation_unit"]
["translation_unit"]
["translation_unit"]
["translation_unit"]
["translation_unit"]
["translation_unit"]
["translation_unit"]
["translation_unit"]
["translation_unit", "function_definition", "void", "function_declarator", "func_void", "parameter_list", "(", ")", "compound_statement", "{", "declaration", "char", "pointer_declarator", "*", "var_char_ptr", ";", "declaration", "char", "init_declarator", "array_declarator", "var_char_array", "[", "1byte_number", "]", "=", "string_literal", "\"", "\"", ";", "expression_statement", "assignment_expression", "var_char_ptr", "=", "var_char_array", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "1byte_number", "==", "1byte_number", ")", "compound_statement", "{", "compound_statement", "{", "declaration", "WSADATA", "var_WSADATA", ";", "declaration", "BOOL", "init_declarator", "var_BOOL", "=", "FALSE", ";", "declaration", "SOCKET", "init_declarator", "var_SOCKET", "=", "INVALID_SOCKET", ";", "declaration", "SOCKET", "init_declarator", "var_SOCKET", "=", "INVALID_SOCKET", ";", "declaration", "struct_specifier", "struct", "sockaddr_in", "var_struct_sockaddr_in", ";", "declaration", "int", "var_int", ";", "do_statement", "do", "compound_statement", "{", "if_statement", "if", "condition_clause", "(", "binary_expression", "call_expression", "WSAStartup", "argument_list", "(", "call_expression", "MAKEWORD", "argument_list", "(", "1byte_number", ",", "1byte_number", ")", ",", "pointer_expression", "&", "var_WSADATA", ")", "!=", "NO_ERROR", ")", "compound_statement", "{", "break_statement", "break", ";", "}", "End", "expression_statement", "assignment_expression", "var_BOOL", "=", "1byte_number", ";", "expression_statement", "assignment_expression", "var_SOCKET", "=", "call_expression", "socket", "argument_list", "(", "PF_INET", ",", "SOCK_STREAM", ",", "1byte_number", ")", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "var_SOCKET", "==", "INVALID_SOCKET", ")", "compound_statement", "{", "break_statement", "break", ";", "}", "End", "expression_statement", "call_expression", "memset", "argument_list", "(", "pointer_expression", "&", "var_struct_sockaddr_in", ",", "1byte_number", ",", "sizeof_expression", "sizeof", "parenthesized_expression", "(", "var_struct_sockaddr_in", ")", ")", ";", "expression_statement", "assignment_expression", "field_expression", "var_struct_sockaddr_in", ".", "var_unk", "=", "AF_INET", ";", "expression_statement", "assignment_expression", "field_expression", "field_expression", "var_struct_sockaddr_in", ".", "var_unk", ".", "var_unk", "=", "INADDR_ANY", ";", "expression_statement", "assignment_expression", "field_expression", "var_struct_sockaddr_in", ".", "var_unk", "=", "call_expression", "func_unk", "argument_list", "(", "LISTEN_PORT", ")", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "SOCKET_ERROR", "==", "call_expression", "func_unk", "argument_list", "(", "var_SOCKET", ",", "cast_expression", "(", "type_descriptor", "struct_specifier", "struct", "var_unk", "abstract_pointer_declarator", "*", ")", "pointer_expression", "&", "var_struct_sockaddr_in", ",", "sizeof_expression", "sizeof", "parenthesized_expression", "(", "var_struct_sockaddr_in", ")", ")", ")", "compound_statement", "{", "break_statement", "break", ";", "}", "End", "if_statement", "if", "condition_clause", "(", "binary_expression", "SOCKET_ERROR", "==", "call_expression", "func_unk", "argument_list", "(", "var_SOCKET", ",", "LISTEN_BACKLOG", ")", ")", "compound_statement", "{", "break_statement", "break", ";", "}", "End", "expression_statement", "assignment_expression", "var_SOCKET", "=", "call_expression", "func_SOCKET", "argument_list", "(", "var_SOCKET", ",", "null", "NULL", ",", "null", "NULL", ")", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "var_SOCKET", "==", "INVALID_SOCKET", ")", "compound_statement", "{", "break_statement", "break", ";", "}", "End", "expression_statement", "assignment_expression", "var_int", "=", "call_expression", "recv", "argument_list", "(", "var_SOCKET", ",", "var_char_ptr", ",", "binary_expression", "1byte_number", "-", "1byte_number", ",", "1byte_number", ")", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "binary_expression", "var_int", "==", "SOCKET_ERROR", "||", "binary_expression", "var_int", "==", "1byte_number", ")", "compound_statement", "{", "break_statement", "break", ";", "}", "End", "expression_statement", "subscript_expression", "var_char_ptr", "subscript_argument_list", "[", "var_int", "]", "ERROR", "=", "'", "'", ";", "}", "End", "while", "parenthesized_expression", "(", "1byte_number", ")", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "var_SOCKET", "!=", "INVALID_SOCKET", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "var_SOCKET", ")", ";", "}", "End", "if_statement", "if", "condition_clause", "(", "binary_expression", "var_SOCKET", "!=", "INVALID_SOCKET", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "var_SOCKET", ")", ";", "}", "End", "if_statement", "if", "condition_clause", "(", "var_BOOL", ")", "compound_statement", "{", "expression_statement", "call_expression", "WSACleanup", "argument_list", "(", ")", ";", "}", "End", "}", "End", "}", "End", "if_statement", "if", "condition_clause", "(", "unary_expression", "!", "call_expression", "func_unk", "argument_list", "(", "var_char_ptr", ")", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "string_literal", "\"", "\"", ")", ";", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "1byte_number", ")", ";", "}", "End", "}", "End"]
["translation_unit", "function_definition", "storage_class_specifier", "static", "void", "function_declarator", "func_static_void", "parameter_list", "(", ")", "compound_statement", "{", "declaration", "char", "pointer_declarator", "*", "var_char_ptr", ";", "declaration", "char", "init_declarator", "array_declarator", "var_char_array", "[", "1byte_number", "]", "=", "string_literal", "\"", "\"", ";", "expression_statement", "assignment_expression", "var_char_ptr", "=", "var_char_array", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "1byte_number", "!=", "1byte_number", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "string_literal", "\"", "\"", ")", ";", "}", "End", "else_clause", "else", "compound_statement", "{", "expression_statement", "call_expression", "strcpy", "argument_list", "(", "var_char_ptr", ",", "string_literal", "\"", "\"", ")", ";", "}", "End", "if_statement", "if", "condition_clause", "(", "unary_expression", "!", "call_expression", "func_unk", "argument_list", "(", "var_char_ptr", ")", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "string_literal", "\"", "\"", ")", ";", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "1byte_number", ")", ";", "}", "End", "}", "End"]
["translation_unit", "function_definition", "storage_class_specifier", "static", "void", "function_declarator", "func_static_void", "parameter_list", "(", ")", "compound_statement", "{", "declaration", "char", "pointer_declarator", "*", "var_char_ptr", ";", "declaration", "char", "init_declarator", "array_declarator", "var_char_array", "[", "1byte_number", "]", "=", "string_literal", "\"", "\"", ";", "expression_statement", "assignment_expression", "var_char_ptr", "=", "var_char_array", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "1byte_number", "==", "1byte_number", ")", "compound_statement", "{", "expression_statement", "call_expression", "strcpy", "argument_list", "(", "var_char_ptr", ",", "string_literal", "\"", "\"", ")", ";", "}", "End", "if_statement", "if", "condition_clause", "(", "unary_expression", "!", "call_expression", "func_unk", "argument_list", "(", "var_char_ptr", ")", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "string_literal", "\"", "\"", ")", ";", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "1byte_number", ")", ";", "}", "End", "}", "End"]
["translation_unit", "function_definition", "void", "function_declarator", "func_void", "parameter_list", "(", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", ")", ";", "expression_statement", "call_expression", "func_unk", "argument_list", "(", ")", ";", "}", "End"]
["translation_unit"]
["translation_unit"]
["translation_unit"]
["translation_unit"]
["translation_unit", "function_definition", "void", "function_declarator", "func_void", "parameter_list", "(", ")", "compound_statement", "{", "declaration", "char", "pointer_declarator", "*", "var_char_ptr", ";", "declaration", "char", "init_declarator", "array_declarator", "var_char_array", "[", "1byte_number", "]", "=", "string_literal", "\"", "\"", ";", "expression_statement", "assignment_expression", "var_char_ptr", "=", "var_char_array", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "1byte_number", "==", "1byte_number", ")", "compound_statement", "{", "compound_statement", "{", "declaration", "WSADATA", "var_WSADATA", ";", "declaration", "BOOL", "init_declarator", "var_BOOL", "=", "FALSE", ";", "declaration", "SOCKET", "init_declarator", "var_SOCKET", "=", "INVALID_SOCKET", ";", "declaration", "SOCKET", "init_declarator", "var_SOCKET", "=", "INVALID_SOCKET", ";", "declaration", "struct_specifier", "struct", "sockaddr_in", "var_struct_sockaddr_in", ";", "declaration", "int", "var_int", ";", "do_statement", "do", "compound_statement", "{", "if_statement", "if", "condition_clause", "(", "binary_expression", "call_expression", "WSAStartup", "argument_list", "(", "call_expression", "MAKEWORD", "argument_list", "(", "1byte_number", ",", "1byte_number", ")", ",", "pointer_expression", "&", "var_WSADATA", ")", "!=", "NO_ERROR", ")", "compound_statement", "{", "break_statement", "break", ";", "}", "End", "expression_statement", "assignment_expression", "var_BOOL", "=", "1byte_number", ";", "expression_statement", "assignment_expression", "var_SOCKET", "=", "call_expression", "socket", "argument_list", "(", "PF_INET", ",", "SOCK_STREAM", ",", "1byte_number", ")", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "var_SOCKET", "==", "INVALID_SOCKET", ")", "compound_statement", "{", "break_statement", "break", ";", "}", "End", "expression_statement", "call_expression", "memset", "argument_list", "(", "pointer_expression", "&", "var_struct_sockaddr_in", ",", "1byte_number", ",", "sizeof_expression", "sizeof", "parenthesized_expression", "(", "var_struct_sockaddr_in", ")", ")", ";", "expression_statement", "assignment_expression", "field_expression", "var_struct_sockaddr_in", ".", "var_unk", "=", "AF_INET", ";", "expression_statement", "assignment_expression", "field_expression", "field_expression", "var_struct_sockaddr_in", ".", "var_unk", ".", "var_unk", "=", "INADDR_ANY", ";", "expression_statement", "assignment_expression", "field_expression", "var_struct_sockaddr_in", ".", "var_unk", "=", "call_expression", "func_unk", "argument_list", "(", "LISTEN_PORT", ")", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "SOCKET_ERROR", "==", "call_expression", "func_unk", "argument_list", "(", "var_SOCKET", ",", "cast_expression", "(", "type_descriptor", "struct_specifier", "struct", "var_unk", "abstract_pointer_declarator", "*", ")", "pointer_expression", "&", "var_struct_sockaddr_in", ",", "sizeof_expression", "sizeof", "parenthesized_expression", "(", "var_struct_sockaddr_in", ")", ")", ")", "compound_statement", "{", "break_statement", "break", ";", "}", "End", "if_statement", "if", "condition_clause", "(", "binary_expression", "SOCKET_ERROR", "==", "call_expression", "func_unk", "argument_list", "(", "var_SOCKET", ",", "LISTEN_BACKLOG", ")", ")", "compound_statement", "{", "break_statement", "break", ";", "}", "End", "expression_statement", "assignment_expression", "var_SOCKET", "=", "call_expression", "func_SOCKET", "argument_list", "(", "var_SOCKET", ",", "null", "NULL", ",", "null", "NULL", ")", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "var_SOCKET", "==", "INVALID_SOCKET", ")", "compound_statement", "{", "break_statement", "break", ";", "}", "End", "expression_statement", "assignment_expression", "var_int", "=", "call_expression", "recv", "argument_list", "(", "var_SOCKET", ",", "var_char_ptr", ",", "binary_expression", "1byte_number", "-", "1byte_number", ",", "1byte_number", ")", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "binary_expression", "var_int", "==", "SOCKET_ERROR", "||", "binary_expression", "var_int", "==", "1byte_number", ")", "compound_statement", "{", "break_statement", "break", ";", "}", "End", "expression_statement", "subscript_expression", "var_char_ptr", "subscript_argument_list", "[", "var_int", "]", "ERROR", "=", "'", "'", ";", "}", "End", "while", "parenthesized_expression", "(", "1byte_number", ")", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "var_SOCKET", "!=", "INVALID_SOCKET", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "var_SOCKET", ")", ";", "}", "End", "if_statement", "if", "condition_clause", "(", "binary_expression", "var_SOCKET", "!=", "INVALID_SOCKET", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "var_SOCKET", ")", ";", "}", "End", "if_statement", "if", "condition_clause", "(", "var_BOOL", ")", "compound_statement", "{", "expression_statement", "call_expression", "WSACleanup", "argument_list", "(", ")", ";", "}", "End", "}", "End", "}", "End", "if_statement", "if", "condition_clause", "(", "unary_expression", "!", "call_expression", "func_unk", "argument_list", "(", "var_char_ptr", ")", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "string_literal", "\"", "\"", ")", ";", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "1byte_number", ")", ";", "}", "End", "}", "End"]
["translation_unit", "function_definition", "storage_class_specifier", "static", "void", "function_declarator", "func_static_void", "parameter_list", "(", ")", "compound_statement", "{", "declaration", "char", "pointer_declarator", "*", "var_char_ptr", ";", "declaration", "char", "init_declarator", "array_declarator", "var_char_array", "[", "1byte_number", "]", "=", "string_literal", "\"", "\"", ";", "expression_statement", "assignment_expression", "var_char_ptr", "=", "var_char_array", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "1byte_number", "!=", "1byte_number", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "string_literal", "\"", "\"", ")", ";", "}", "End", "else_clause", "else", "compound_statement", "{", "expression_statement", "call_expression", "strcpy", "argument_list", "(", "var_char_ptr", ",", "string_literal", "\"", "\"", ")", ";", "}", "End", "if_statement", "if", "condition_clause", "(", "unary_expression", "!", "call_expression", "func_unk", "argument_list", "(", "var_char_ptr", ")", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "string_literal", "\"", "\"", ")", ";", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "1byte_number", ")", ";", "}", "End", "}", "End"]
["translation_unit", "function_definition", "storage_class_specifier", "static", "void", "function_declarator", "func_static_void", "parameter_list", "(", ")", "compound_statement", "{", "declaration", "char", "pointer_declarator", "*", "var_char_ptr", ";", "declaration", "char", "init_declarator", "array_declarator", "var_char_array", "[", "1byte_number", "]", "=", "string_literal", "\"", "\"", ";", "expression_statement", "assignment_expression", "var_char_ptr", "=", "var_char_array", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "1byte_number", "==", "1byte_number", ")", "compound_statement", "{", "expression_statement", "call_expression", "strcpy", "argument_list", "(", "var_char_ptr", ",", "string_literal", "\"", "\"", ")", ";", "}", "End", "if_statement", "if", "condition_clause", "(", "unary_expression", "!", "call_expression", "func_unk", "argument_list", "(", "var_char_ptr", ")", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "string_literal", "\"", "\"", ")", ";", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "1byte_number", ")", ";", "}", "End", "}", "End"]
["translation_unit", "function_definition", "void", "function_declarator", "func_void", "parameter_list", "(", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", ")", ";", "expression_statement", "call_expression", "func_unk", "argument_list", "(", ")", ";", "}", "End"]
["translation_unit", "function_definition", "void", "function_declarator", "func_void", "parameter_list", "(", ")", "compound_statement", "{", "declaration", "char", "pointer_declarator", "*", "var_char_ptr", ";", "declaration", "char", "init_declarator", "array_declarator", "var_char_array", "[", "1byte_number", "]", "=", "string_literal", "\"", "\"", ";", "expression_statement", "assignment_expression", "var_char_ptr", "=", "var_char_array", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "1byte_number", "==", "1byte_number", ")", "compound_statement", "{", "compound_statement", "{", "declaration", "WSADATA", "var_WSADATA", ";", "declaration", "BOOL", "init_declarator", "var_BOOL", "=", "FALSE", ";", "declaration", "SOCKET", "init_declarator", "var_SOCKET", "=", "INVALID_SOCKET", ";", "declaration", "SOCKET", "init_declarator", "var_SOCKET", "=", "INVALID_SOCKET", ";", "declaration", "struct_specifier", "struct", "sockaddr_in", "var_struct_sockaddr_in", ";", "declaration", "int", "var_int", ";", "do_statement", "do", "compound_statement", "{", "if_statement", "if", "condition_clause", "(", "binary_expression", "call_expression", "WSAStartup", "argument_list", "(", "call_expression", "MAKEWORD", "argument_list", "(", "1byte_number", ",", "1byte_number", ")", ",", "pointer_expression", "&", "var_WSADATA", ")", "!=", "NO_ERROR", ")", "compound_statement", "{", "break_statement", "break", ";", "}", "End", "expression_statement", "assignment_expression", "var_BOOL", "=", "1byte_number", ";", "expression_statement", "assignment_expression", "var_SOCKET", "=", "call_expression", "socket", "argument_list", "(", "PF_INET", ",", "SOCK_STREAM", ",", "1byte_number", ")", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "var_SOCKET", "==", "INVALID_SOCKET", ")", "compound_statement", "{", "break_statement", "break", ";", "}", "End", "expression_statement", "call_expression", "memset", "argument_list", "(", "pointer_expression", "&", "var_struct_sockaddr_in", ",", "1byte_number", ",", "sizeof_expression", "sizeof", "parenthesized_expression", "(", "var_struct_sockaddr_in", ")", ")", ";", "expression_statement", "assignment_expression", "field_expression", "var_struct_sockaddr_in", ".", "var_unk", "=", "AF_INET", ";", "expression_statement", "assignment_expression", "field_expression", "field_expression", "var_struct_sockaddr_in", ".", "var_unk", ".", "var_unk", "=", "INADDR_ANY", ";", "expression_statement", "assignment_expression", "field_expression", "var_struct_sockaddr_in", ".", "var_unk", "=", "call_expression", "func_unk", "argument_list", "(", "LISTEN_PORT", ")", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "SOCKET_ERROR", "==", "call_expression", "func_unk", "argument_list", "(", "var_SOCKET", ",", "cast_expression", "(", "type_descriptor", "struct_specifier", "struct", "var_unk", "abstract_pointer_declarator", "*", ")", "pointer_expression", "&", "var_struct_sockaddr_in", ",", "sizeof_expression", "sizeof", "parenthesized_expression", "(", "var_struct_sockaddr_in", ")", ")", ")", "compound_statement", "{", "break_statement", "break", ";", "}", "End", "if_statement", "if", "condition_clause", "(", "binary_expression", "SOCKET_ERROR", "==", "call_expression", "func_unk", "argument_list", "(", "var_SOCKET", ",", "LISTEN_BACKLOG", ")", ")", "compound_statement", "{", "break_statement", "break", ";", "}", "End", "expression_statement", "assignment_expression", "var_SOCKET", "=", "call_expression", "func_SOCKET", "argument_list", "(", "var_SOCKET", ",", "null", "NULL", ",", "null", "NULL", ")", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "var_SOCKET", "==", "INVALID_SOCKET", ")", "compound_statement", "{", "break_statement", "break", ";", "}", "End", "expression_statement", "assignment_expression", "var_int", "=", "call_expression", "recv", "argument_list", "(", "var_SOCKET", ",", "var_char_ptr", ",", "binary_expression", "1byte_number", "-", "1byte_number", ",", "1byte_number", ")", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "binary_expression", "var_int", "==", "SOCKET_ERROR", "||", "binary_expression", "var_int", "==", "1byte_number", ")", "compound_statement", "{", "break_statement", "break", ";", "}", "End", "expression_statement", "subscript_expression", "var_char_ptr", "subscript_argument_list", "[", "var_int", "]", "ERROR", "=", "'", "'", ";", "}", "End", "while", "parenthesized_expression", "(", "1byte_number", ")", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "var_SOCKET", "!=", "INVALID_SOCKET", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "var_SOCKET", ")", ";", "}", "End", "if_statement", "if", "condition_clause", "(", "binary_expression", "var_SOCKET", "!=", "INVALID_SOCKET", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "var_SOCKET", ")", ";", "}", "End", "if_statement", "if", "condition_clause", "(", "var_BOOL", ")", "compound_statement", "{", "expression_statement", "call_expression", "WSACleanup", "argument_list", "(", ")", ";", "}", "End", "}", "End", "}", "End", "if_statement", "if", "condition_clause", "(", "unary_expression", "!", "call_expression", "func_unk", "argument_list", "(", "var_char_ptr", ")", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "string_literal", "\"", "\"", ")", ";", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "1byte_number", ")", ";", "}", "End", "}", "End"]
["translation_unit", "function_definition", "storage_class_specifier", "static", "void", "function_declarator", "func_static_void", "parameter_list", "(", ")", "compound_statement", "{", "declaration", "char", "pointer_declarator", "*", "var_char_ptr", ";", "declaration", "char", "init_declarator", "array_declarator", "var_char_array", "[", "1byte_number", "]", "=", "string_literal", "\"", "\"", ";", "expression_statement", "assignment_expression", "var_char_ptr", "=", "var_char_array", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "1byte_number", "!=", "1byte_number", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "string_literal", "\"", "\"", ")", ";", "}", "End", "else_clause", "else", "compound_statement", "{", "expression_statement", "call_expression", "strcpy", "argument_list", "(", "var_char_ptr", ",", "string_literal", "\"", "\"", ")", ";", "}", "End", "if_statement", "if", "condition_clause", "(", "unary_expression", "!", "call_expression", "func_unk", "argument_list", "(", "var_char_ptr", ")", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "string_literal", "\"", "\"", ")", ";", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "1byte_number", ")", ";", "}", "End", "}", "End"]
["translation_unit", "function_definition", "storage_class_specifier", "static", "void", "function_declarator", "func_static_void", "parameter_list", "(", ")", "compound_statement", "{", "declaration", "char", "pointer_declarator", "*", "var_char_ptr", ";", "declaration", "char", "init_declarator", "array_declarator", "var_char_array", "[", "1byte_number", "]", "=", "string_literal", "\"", "\"", ";", "expression_statement", "assignment_expression", "var_char_ptr", "=", "var_char_array", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "1byte_number", "==", "1byte_number", ")", "compound_statement", "{", "expression_statement", "call_expression", "strcpy", "argument_list", "(", "var_char_ptr", ",", "string_literal", "\"", "\"", ")", ";", "}", "End", "if_statement", "if", "condition_clause", "(", "unary_expression", "!", "call_expression", "func_unk", "argument_list", "(", "var_char_ptr", ")", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "string_literal", "\"", "\"", ")", ";", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "1byte_number", ")", ";", "}", "End", "}", "End"]
["translation_unit", "function_definition", "void", "function_declarator", "func_void", "parameter_list", "(", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", ")", ";", "expression_statement", "call_expression", "func_unk", "argument_list", "(", ")", ";", "}", "End"]
["translation_unit", "function_definition", "void", "function_declarator", "func_void", "parameter_list", "(", ")", "compound_statement", "{", "declaration", "char", "pointer_declarator", "*", "var_char_ptr", ";", "declaration", "char", "init_declarator", "array_declarator", "var_char_array", "[", "1byte_number", "]", "=", "string_literal", "\"", "\"", ";", "expression_statement", "assignment_expression", "var_char_ptr", "=", "var_char_array", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "1byte_number", "==", "1byte_number", ")", "compound_statement", "{", "compound_statement", "{", "declaration", "WSADATA", "var_WSADATA", ";", "declaration", "BOOL", "init_declarator", "var_BOOL", "=", "FALSE", ";", "declaration", "SOCKET", "init_declarator", "var_SOCKET", "=", "INVALID_SOCKET", ";", "declaration", "SOCKET", "init_declarator", "var_SOCKET", "=", "INVALID_SOCKET", ";", "declaration", "struct_specifier", "struct", "sockaddr_in", "var_struct_sockaddr_in", ";", "declaration", "int", "var_int", ";", "do_statement", "do", "compound_statement", "{", "if_statement", "if", "condition_clause", "(", "binary_expression", "call_expression", "WSAStartup", "argument_list", "(", "call_expression", "MAKEWORD", "argument_list", "(", "1byte_number", ",", "1byte_number", ")", ",", "pointer_expression", "&", "var_WSADATA", ")", "!=", "NO_ERROR", ")", "compound_statement", "{", "break_statement", "break", ";", "}", "End", "expression_statement", "assignment_expression", "var_BOOL", "=", "1byte_number", ";", "expression_statement", "assignment_expression", "var_SOCKET", "=", "call_expression", "socket", "argument_list", "(", "PF_INET", ",", "SOCK_STREAM", ",", "1byte_number", ")", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "var_SOCKET", "==", "INVALID_SOCKET", ")", "compound_statement", "{", "break_statement", "break", ";", "}", "End", "expression_statement", "call_expression", "memset", "argument_list", "(", "pointer_expression", "&", "var_struct_sockaddr_in", ",", "1byte_number", ",", "sizeof_expression", "sizeof", "parenthesized_expression", "(", "var_struct_sockaddr_in", ")", ")", ";", "expression_statement", "assignment_expression", "field_expression", "var_struct_sockaddr_in", ".", "var_unk", "=", "AF_INET", ";", "expression_statement", "assignment_expression", "field_expression", "field_expression", "var_struct_sockaddr_in", ".", "var_unk", ".", "var_unk", "=", "INADDR_ANY", ";", "expression_statement", "assignment_expression", "field_expression", "var_struct_sockaddr_in", ".", "var_unk", "=", "call_expression", "func_unk", "argument_list", "(", "LISTEN_PORT", ")", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "SOCKET_ERROR", "==", "call_expression", "func_unk", "argument_list", "(", "var_SOCKET", ",", "cast_expression", "(", "type_descriptor", "struct_specifier", "struct", "var_unk", "abstract_pointer_declarator", "*", ")", "pointer_expression", "&", "var_struct_sockaddr_in", ",", "sizeof_expression", "sizeof", "parenthesized_expression", "(", "var_struct_sockaddr_in", ")", ")", ")", "compound_statement", "{", "break_statement", "break", ";", "}", "End", "if_statement", "if", "condition_clause", "(", "binary_expression", "SOCKET_ERROR", "==", "call_expression", "func_unk", "argument_list", "(", "var_SOCKET", ",", "LISTEN_BACKLOG", ")", ")", "compound_statement", "{", "break_statement", "break", ";", "}", "End", "expression_statement", "assignment_expression", "var_SOCKET", "=", "call_expression", "func_SOCKET", "argument_list", "(", "var_SOCKET", ",", "null", "NULL", ",", "null", "NULL", ")", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "var_SOCKET", "==", "INVALID_SOCKET", ")", "compound_statement", "{", "break_statement", "break", ";", "}", "End", "expression_statement", "assignment_expression", "var_int", "=", "call_expression", "recv", "argument_list", "(", "var_SOCKET", ",", "var_char_ptr", ",", "binary_expression", "1byte_number", "-", "1byte_number", ",", "1byte_number", ")", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "binary_expression", "var_int", "==", "SOCKET_ERROR", "||", "binary_expression", "var_int", "==", "1byte_number", ")", "compound_statement", "{", "break_statement", "break", ";", "}", "End", "expression_statement", "subscript_expression", "var_char_ptr", "subscript_argument_list", "[", "var_int", "]", "ERROR", "=", "'", "'", ";", "}", "End", "while", "parenthesized_expression", "(", "1byte_number", ")", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "var_SOCKET", "!=", "INVALID_SOCKET", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "var_SOCKET", ")", ";", "}", "End", "if_statement", "if", "condition_clause", "(", "binary_expression", "var_SOCKET", "!=", "INVALID_SOCKET", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "var_SOCKET", ")", ";", "}", "End", "if_statement", "if", "condition_clause", "(", "var_BOOL", ")", "compound_statement", "{", "expression_statement", "call_expression", "WSACleanup", "argument_list", "(", ")", ";", "}", "End", "}", "End", "}", "End", "if_statement", "if", "condition_clause", "(", "unary_expression", "!", "call_expression", "func_unk", "argument_list", "(", "var_char_ptr", ")", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "string_literal", "\"", "\"", ")", ";", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "1byte_number", ")", ";", "}", "End", "}", "End"]
["translation_unit", "function_definition", "storage_class_specifier", "static", "void", "function_declarator", "func_static_void", "parameter_list", "(", ")", "compound_statement", "{", "declaration", "char", "pointer_declarator", "*", "var_char_ptr", ";", "declaration", "char", "init_declarator", "array_declarator", "var_char_array", "[", "1byte_number", "]", "=", "string_literal", "\"", "\"", ";", "expression_statement", "assignment_expression", "var_char_ptr", "=", "var_char_array", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "1byte_number", "!=", "1byte_number", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "string_literal", "\"", "\"", ")", ";", "}", "End", "else_clause", "else", "compound_statement", "{", "expression_statement", "call_expression", "strcpy", "argument_list", "(", "var_char_ptr", ",", "string_literal", "\"", "\"", ")", ";", "}", "End", "if_statement", "if", "condition_clause", "(", "unary_expression", "!", "call_expression", "func_unk", "argument_list", "(", "var_char_ptr", ")", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "string_literal", "\"", "\"", ")", ";", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "1byte_number", ")", ";", "}", "End", "}", "End"]
["translation_unit", "function_definition", "storage_class_specifier", "static", "void", "function_declarator", "func_static_void", "parameter_list", "(", ")", "compound_statement", "{", "declaration", "char", "pointer_declarator", "*", "var_char_ptr", ";", "declaration", "char", "init_declarator", "array_declarator", "var_char_array", "[", "1byte_number", "]", "=", "string_literal", "\"", "\"", ";", "expression_statement", "assignment_expression", "var_char_ptr", "=", "var_char_array", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "1byte_number", "==", "1byte_number", ")", "compound_statement", "{", "expression_statement", "call_expression", "strcpy", "argument_list", "(", "var_char_ptr", ",", "string_literal", "\"", "\"", ")", ";", "}", "End", "if_statement", "if", "condition_clause", "(", "unary_expression", "!", "call_expression", "func_unk", "argument_list", "(", "var_char_ptr", ")", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "string_literal", "\"", "\"", ")", ";", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "1byte_number", ")", ";", "}", "End", "}", "End"]
["translation_unit", "function_definition", "void", "function_declarator", "func_void", "parameter_list", "(", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", ")", ";", "expression_statement", "call_expression", "func_unk", "argument_list", "(", ")", ";", "}", "End"]
["translation_unit", "function_definition", "void", "function_declarator", "func_void", "parameter_list", "(", ")", "compound_statement", "{", "declaration", "char", "pointer_declarator", "*", "var_char_ptr", ";", "declaration", "char", "init_declarator", "array_declarator", "var_char_array", "[", "1byte_number", "]", "=", "string_literal", "\"", "\"", ";", "expression_statement", "assignment_expression", "var_char_ptr", "=", "var_char_array", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "1byte_number", "==", "1byte_number", ")", "compound_statement", "{", "compound_statement", "{", "declaration", "WSADATA", "var_WSADATA", ";", "declaration", "BOOL", "init_declarator", "var_BOOL", "=", "FALSE", ";", "declaration", "SOCKET", "init_declarator", "var_SOCKET", "=", "INVALID_SOCKET", ";", "declaration", "SOCKET", "init_declarator", "var_SOCKET", "=", "INVALID_SOCKET", ";", "declaration", "struct_specifier", "struct", "sockaddr_in", "var_struct_sockaddr_in", ";", "declaration", "int", "var_int", ";", "do_statement", "do", "compound_statement", "{", "if_statement", "if", "condition_clause", "(", "binary_expression", "call_expression", "WSAStartup", "argument_list", "(", "call_expression", "MAKEWORD", "argument_list", "(", "1byte_number", ",", "1byte_number", ")", ",", "pointer_expression", "&", "var_WSADATA", ")", "!=", "NO_ERROR", ")", "compound_statement", "{", "break_statement", "break", ";", "}", "End", "expression_statement", "assignment_expression", "var_BOOL", "=", "1byte_number", ";", "expression_statement", "assignment_expression", "var_SOCKET", "=", "call_expression", "socket", "argument_list", "(", "PF_INET", ",", "SOCK_STREAM", ",", "1byte_number", ")", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "var_SOCKET", "==", "INVALID_SOCKET", ")", "compound_statement", "{", "break_statement", "break", ";", "}", "End", "expression_statement", "call_expression", "memset", "argument_list", "(", "pointer_expression", "&", "var_struct_sockaddr_in", ",", "1byte_number", ",", "sizeof_expression", "sizeof", "parenthesized_expression", "(", "var_struct_sockaddr_in", ")", ")", ";", "expression_statement", "assignment_expression", "field_expression", "var_struct_sockaddr_in", ".", "var_unk", "=", "AF_INET", ";", "expression_statement", "assignment_expression", "field_expression", "field_expression", "var_struct_sockaddr_in", ".", "var_unk", ".", "var_unk", "=", "INADDR_ANY", ";", "expression_statement", "assignment_expression", "field_expression", "var_struct_sockaddr_in", ".", "var_unk", "=", "call_expression", "func_unk", "argument_list", "(", "LISTEN_PORT", ")", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "SOCKET_ERROR", "==", "call_expression", "func_unk", "argument_list", "(", "var_SOCKET", ",", "cast_expression", "(", "type_descriptor", "struct_specifier", "struct", "var_unk", "abstract_pointer_declarator", "*", ")", "pointer_expression", "&", "var_struct_sockaddr_in", ",", "sizeof_expression", "sizeof", "parenthesized_expression", "(", "var_struct_sockaddr_in", ")", ")", ")", "compound_statement", "{", "break_statement", "break", ";", "}", "End", "if_statement", "if", "condition_clause", "(", "binary_expression", "SOCKET_ERROR", "==", "call_expression", "func_unk", "argument_list", "(", "var_SOCKET", ",", "LISTEN_BACKLOG", ")", ")", "compound_statement", "{", "break_statement", "break", ";", "}", "End", "expression_statement", "assignment_expression", "var_SOCKET", "=", "call_expression", "func_SOCKET", "argument_list", "(", "var_SOCKET", ",", "null", "NULL", ",", "null", "NULL", ")", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "var_SOCKET", "==", "INVALID_SOCKET", ")", "compound_statement", "{", "break_statement", "break", ";", "}", "End", "expression_statement", "assignment_expression", "var_int", "=", "call_expression", "recv", "argument_list", "(", "var_SOCKET", ",", "var_char_ptr", ",", "binary_expression", "1byte_number", "-", "1byte_number", ",", "1byte_number", ")", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "binary_expression", "var_int", "==", "SOCKET_ERROR", "||", "binary_expression", "var_int", "==", "1byte_number", ")", "compound_statement", "{", "break_statement", "break", ";", "}", "End", "expression_statement", "subscript_expression", "var_char_ptr", "subscript_argument_list", "[", "var_int", "]", "ERROR", "=", "'", "'", ";", "}", "End", "while", "parenthesized_expression", "(", "1byte_number", ")", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "var_SOCKET", "!=", "INVALID_SOCKET", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "var_SOCKET", ")", ";", "}", "End", "if_statement", "if", "condition_clause", "(", "binary_expression", "var_SOCKET", "!=", "INVALID_SOCKET", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "var_SOCKET", ")", ";", "}", "End", "if_statement", "if", "condition_clause", "(", "var_BOOL", ")", "compound_statement", "{", "expression_statement", "call_expression", "WSACleanup", "argument_list", "(", ")", ";", "}", "End", "}", "End", "}", "End", "if_statement", "if", "condition_clause", "(", "unary_expression", "!", "call_expression", "func_unk", "argument_list", "(", "var_char_ptr", ")", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "string_literal", "\"", "\"", ")", ";", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "1byte_number", ")", ";", "}", "End", "}", "End"]
["translation_unit", "function_definition", "storage_class_specifier", "static", "void", "function_declarator", "func_static_void", "parameter_list", "(", ")", "compound_statement", "{", "declaration", "char", "pointer_declarator", "*", "var_char_ptr", ";", "declaration", "char", "init_declarator", "array_declarator", "var_char_array", "[", "1byte_number", "]", "=", "string_literal", "\"", "\"", ";", "expression_statement", "assignment_expression", "var_char_ptr", "=", "var_char_array", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "1byte_number", "!=", "1byte_number", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "string_literal", "\"", "\"", ")", ";", "}", "End", "else_clause", "else", "compound_statement", "{", "expression_statement", "call_expression", "strcpy", "argument_list", "(", "var_char_ptr", ",", "string_literal", "\"", "\"", ")", ";", "}", "End", "if_statement", "if", "condition_clause", "(", "unary_expression", "!", "call_expression", "func_unk", "argument_list", "(", "var_char_ptr", ")", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "string_literal", "\"", "\"", ")", ";", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "1byte_number", ")", ";", "}", "End", "}", "End"]
["translation_unit", "function_definition", "storage_class_specifier", "static", "void", "function_declarator", "func_static_void", "parameter_list", "(", ")", "compound_statement", "{", "declaration", "char", "pointer_declarator", "*", "var_char_ptr", ";", "declaration", "char", "init_declarator", "array_declarator", "var_char_array", "[", "1byte_number", "]", "=", "string_literal", "\"", "\"", ";", "expression_statement", "assignment_expression", "var_char_ptr", "=", "var_char_array", ";", "if_statement", "if", "condition_clause", "(", "binary_expression", "1byte_number", "==", "1byte_number", ")", "compound_statement", "{", "expression_statement", "call_expression", "strcpy", "argument_list", "(", "var_char_ptr", ",", "string_literal", "\"", "\"", ")", ";", "}", "End", "if_statement", "if", "condition_clause", "(", "unary_expression", "!", "call_expression", "func_unk", "argument_list", "(", "var_char_ptr", ")", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "string_literal", "\"", "\"", ")", ";", "expression_statement", "call_expression", "func_unk", "argument_list", "(", "1byte_number", ")", ";", "}", "End", "}", "End"]
["translation_unit", "function_definition", "void", "function_declarator", "func_void", "parameter_list", "(", ")", "compound_statement", "{", "expression_statement", "call_expression", "func_unk", "argument_list", "(", ")", ";", "expression_statement", "call_expression", "func_unk", "argument_list", "(", ")", ";", "}", "End"]
["translation_unit", "function_definitionleaf", "voidleaf", "function_declaratorleaf", "func_voidleaf", "parameter_listleaf", "(leaf", ")leaf", "compound_statementleaf", "{leaf", "declarationleaf", "charleaf", "pointer_declaratorleaf", "*leaf", "var_char_ptrleaf", ";leaf", "declarationleaf", "charleaf", "init_declaratorleaf", "array_declaratorleaf", "var_char_arrayleaf", "[leaf", "1byte_numberleaf", "]leaf", "=leaf", "string_literalleaf", "\"leaf", "\"leaf", ";leaf", "expression_statementleaf", "assignment_expressionleaf", "var_char_ptrleaf", "=leaf", "var_char_arrayleaf", ";leaf", "if_statementleaf", "ifleaf", "condition_clauseleaf", "(leaf", "binary_expressionleaf", "1byte_numberleaf", "==leaf", "1byte_numberleaf", ")leaf", "compound_statementleaf", "{leaf", "compound_statementleaf", "{leaf", "declarationleaf", "WSADATAleaf", "var_WSADATAleaf", ";leaf", "declarationleaf", "BOOLleaf", "init_declaratorleaf", "var_BOOLleaf", "=leaf", "FALSEleaf", ";leaf", "declarationleaf", "SOCKETleaf", "init_declaratorleaf", "var_SOCKETleaf", "=leaf", "INVALID_SOCKETleaf", ";leaf", "declarationleaf", "SOCKETleaf", "init_declaratorleaf", "var_SOCKETleaf", "=leaf", "INVALID_SOCKETleaf", ";leaf", "declarationleaf", "struct_specifierleaf", "structleaf", "sockaddr_inleaf", "var_struct_sockaddr_inleaf", ";leaf", "declarationleaf", "intleaf", "var_intleaf", ";leaf", "do_statementleaf", "doleaf", "compound_statementleaf", "{leaf", "if_statementleaf", "ifleaf", "condition_clauseleaf", "(leaf", "binary_expressionleaf", "call_expressionleaf", "WSAStartupleaf", "argument_listleaf", "(leaf", "call_expressionleaf", "MAKEWORDleaf", "argument_listleaf", "(leaf", "1byte_numberleaf", ",leaf", "1byte_numberleaf", ")leaf", ",leaf", "pointer_expressionleaf", "&leaf", "var_WSADATAleaf", ")leaf", "!=leaf", "NO_ERRORleaf", ")leaf", "compound_statementleaf", "{leaf", "break_statementleaf", "breakleaf", ";leaf", "}leaf", "expression_statementleaf", "assignment_expressionleaf", "var_BOOLleaf", "=leaf", "1byte_numberleaf", ";leaf", "expression_statementleaf", "assignment_expressionleaf", "var_SOCKETleaf", "=leaf", "call_expressionleaf", "socketleaf", "argument_listleaf", "(leaf", "PF_INETleaf", ",leaf", "SOCK_STREAMleaf", ",leaf", "1byte_numberleaf", ")leaf", ";leaf", "if_statementleaf", "ifleaf", "condition_clauseleaf", "(leaf", "binary_expressionleaf", "var_SOCKETleaf", "==leaf", "INVALID_SOCKETleaf", ")leaf", "compound_statementleaf", "{leaf", "break_statementleaf", "breakleaf", ";leaf", "}leaf", "expression_statementleaf", "call_expressionleaf", "memsetleaf", "argument_listleaf", "(leaf", "pointer_expressionleaf", "&leaf", "var_struct_sockaddr_inleaf", ",leaf", "1byte_numberleaf", ",leaf", "sizeof_expressionleaf", "sizeofleaf", "parenthesized_expressionleaf", "(leaf", "var_struct_sockaddr_inleaf", ")leaf", ")leaf", ";leaf", "expression_statementleaf", "assignment_expressionleaf", "field_expressionleaf", "var_struct_sockaddr_inleaf", ".leaf", "var_unkleaf", "=leaf", "AF_INETleaf", ";leaf", "expression_statementleaf", "assignment_expressionleaf", "field_expressionleaf", "field_expressionleaf", "var_struct_sockaddr_inleaf", ".leaf", "var_unkleaf", ".leaf", "var_unkleaf", "=leaf", "INADDR_ANYleaf", ";leaf", "expression_statementleaf", "assignment_expressionleaf", "field_expressionleaf", "var_struct_sockaddr_inleaf", ".leaf", "var_unkleaf", "=leaf", "call_expressionleaf", "func_unkleaf", "argument_listleaf", "(leaf", "LISTEN_PORTleaf", ")leaf", ";leaf", "if_statementleaf", "ifleaf", "condition_clauseleaf", "(leaf", "binary_expressionleaf", "SOCKET_ERRORleaf", "==leaf", "call_expressionleaf", "func_unkleaf", "argument_listleaf", "(leaf", "var_SOCKETleaf", ",leaf", "cast_expressionleaf", "(leaf", "type_descriptorleaf", "struct_specifierleaf", "structleaf", "var_unkleaf", "abstract_pointer_declaratorleaf", "*leaf", ")leaf", "pointer_expressionleaf", "&leaf", "var_struct_sockaddr_inleaf", ",leaf", "sizeof_expressionleaf", "sizeofleaf", "parenthesized_expressionleaf", "(leaf", "var_struct_sockaddr_inleaf", ")leaf", ")leaf", ")leaf", "compound_statementleaf", "{leaf", "break_statementleaf", "breakleaf", ";leaf", "}leaf", "if_statementleaf", "ifleaf", "condition_clauseleaf", "(leaf", "binary_expressionleaf", "SOCKET_ERRORleaf", "==leaf", "call_expressionleaf", "func_unkleaf", "argument_listleaf", "(leaf", "var_SOCKETleaf", ",leaf", "LISTEN_BACKLOGleaf", ")leaf", ")leaf", "compound_statementleaf", "{leaf", "break_statementleaf", "breakleaf", ";leaf", "}leaf", "expression_statementleaf", "assignment_expressionleaf", "var_SOCKETleaf", "=leaf", "call_expressionleaf", "func_SOCKETleaf", "argument_listleaf", "(leaf", "var_SOCKETleaf", ",leaf", "nullleaf", "NULLleaf", ",leaf", "nullleaf", "NULLleaf", ")leaf", ";leaf", "if_statementleaf", "ifleaf", "condition_clauseleaf", "(leaf", "binary_expressionleaf", "var_SOCKETleaf", "==leaf", "INVALID_SOCKETleaf", ")leaf", "compound_statementleaf", "{leaf", "break_statementleaf", "breakleaf", ";leaf", "}leaf", "expression_statementleaf", "assignment_expressionleaf", "var_intleaf", "=leaf", "call_expressionleaf", "recvleaf", "argument_listleaf", "(leaf", "var_SOCKETleaf", ",leaf", "var_char_ptrleaf", ",leaf", "binary_expressionleaf", "1byte_numberleaf", "-leaf", "1byte_numberleaf", ",leaf", "1byte_numberleaf", ")leaf", ";leaf", "if_statementleaf", "ifleaf", "condition_clauseleaf", "(leaf", "binary_expressionleaf", "binary_expressionleaf", "var_intleaf", "==leaf", "SOCKET_ERRORleaf", "||leaf", "binary_expressionleaf", "var_intleaf", "==leaf", "1byte_numberleaf", ")leaf", "compound_statementleaf", "{leaf", "break_statementleaf", "breakleaf", ";leaf", "}leaf", "expression_statementleaf", "subscript_expressionleaf", "var_char_ptrleaf", "subscript_argument_listleaf", "[leaf", "var_intleaf", "]leaf", "ERRORleaf", "=leaf", "'leaf", "'leaf", ";leaf", "}leaf", "whileleaf", "parenthesized_expressionleaf", "(leaf", "1byte_numberleaf", ")leaf", ";leaf", "if_statementleaf", "ifleaf", "condition_clauseleaf", "(leaf", "binary_expressionleaf", "var_SOCKETleaf", "!=leaf", "INVALID_SOCKETleaf", ")leaf", "compound_statementleaf", "{leaf", "expression_statementleaf", "call_expressionleaf", "func_unkleaf", "argument_listleaf", "(leaf", "var_SOCKETleaf", ")leaf", ";leaf", "}leaf", "if_statementleaf", "ifleaf", "condition_clauseleaf", "(leaf", "binary_expressionleaf", "var_SOCKETleaf", "!=leaf", "INVALID_SOCKETleaf", ")leaf", "compound_statementleaf", "{leaf", "expression_statementleaf", "call_expressionleaf", "func_unkleaf", "argument_listleaf", "(leaf", "var_SOCKETleaf", ")leaf", ";leaf", "}leaf", "if_statementleaf", "ifleaf", "condition_clauseleaf", "(leaf", "var_BOOLleaf", ")leaf", "compound_statementleaf", "{leaf", "expression_statementleaf", "call_expressionleaf", "WSACleanupleaf", "argument_listleaf", "(leaf", ")leaf", ";leaf", "}leaf", "}leaf", "}leaf", "if_statementleaf", "ifleaf", "condition_clauseleaf", "(leaf", "unary_expressionleaf", "!leaf", "call_expressionleaf", "func_unkleaf", "argument_listleaf", "(leaf", "var_char_ptrleaf", ")leaf", ")leaf", "compound_statementleaf", "{leaf", "expression_statementleaf", "call_expressionleaf", "func_unkleaf", "argument_listleaf", "(leaf", "string_literalleaf", "\"leaf", "\"leaf", ")leaf", ";leaf", "expression_statementleaf", "call_expressionleaf", "func_unkleaf", "argument_listleaf", "(leaf", "1byte_numberleaf", ")leaf", ";leaf", "}leaf", "}leaf"]
["translation_unit", "function_definitionleaf", "storage_class_specifierleaf", "staticleaf", "voidleaf", "function_declaratorleaf", "func_static_voidleaf", "parameter_listleaf", "(leaf", ")leaf", "compound_statementleaf", "{leaf", "declarationleaf", "charleaf", "pointer_declaratorleaf", "*leaf", "var_char_ptrleaf", ";leaf", "declarationleaf", "charleaf", "init_declaratorleaf", "array_declaratorleaf", "var_char_arrayleaf", "[leaf", "1byte_numberleaf", "]leaf", "=leaf", "string_literalleaf", "\"leaf", "\"leaf", ";leaf", "expression_statementleaf", "assignment_expressionleaf", "var_char_ptrleaf", "=leaf", "var_char_arrayleaf", ";leaf", "if_statementleaf", "ifleaf", "condition_clauseleaf", "(leaf", "binary_expressionleaf", "1byte_numberleaf", "!=leaf", "1byte_numberleaf", ")leaf", "compound_statementleaf", "{leaf", "expression_statementleaf", "call_expressionleaf", "func_unkleaf", "argument_listleaf", "(leaf", "string_literalleaf", "\"leaf", "\"leaf", ")leaf", ";leaf", "}leaf", "else_clauseleaf", "elseleaf", "compound_statementleaf", "{leaf", "expression_statementleaf", "call_expressionleaf", "strcpyleaf", "argument_listleaf", "(leaf", "var_char_ptrleaf", ",leaf", "string_literalleaf", "\"leaf", "\"leaf", ")leaf", ";leaf", "}leaf", "if_statementleaf", "ifleaf", "condition_clauseleaf", "(leaf", "unary_expressionleaf", "!leaf", "call_expressionleaf", "func_unkleaf", "argument_listleaf", "(leaf", "var_char_ptrleaf", ")leaf", ")leaf", "compound_statementleaf", "{leaf", "expression_statementleaf", "call_expressionleaf", "func_unkleaf", "argument_listleaf", "(leaf", "string_literalleaf", "\"leaf", "\"leaf", ")leaf", ";leaf", "expression_statementleaf", "call_expressionleaf", "func_unkleaf", "argument_listleaf", "(leaf", "1byte_numberleaf", ")leaf", ";leaf", "}leaf", "}leaf"]
["translation_unit", "function_definitionleaf", "storage_class_specifierleaf", "staticleaf", "voidleaf", "function_declaratorleaf", "func_static_voidleaf", "parameter_listleaf", "(leaf", ")leaf", "compound_statementleaf", "{leaf", "declarationleaf", "charleaf", "pointer_declaratorleaf", "*leaf", "var_char_ptrleaf", ";leaf", "declarationleaf", "charleaf", "init_declaratorleaf", "array_declaratorleaf", "var_char_arrayleaf", "[leaf", "1byte_numberleaf", "]leaf", "=leaf", "string_literalleaf", "\"leaf", "\"leaf", ";leaf", "expression_statementleaf", "assignment_expressionleaf", "var_char_ptrleaf", "=leaf", "var_char_arrayleaf", ";leaf", "if_statementleaf", "ifleaf", "condition_clauseleaf", "(leaf", "binary_expressionleaf", "1byte_numberleaf", "==leaf", "1byte_numberleaf", ")leaf", "compound_statementleaf", "{leaf", "expression_statementleaf", "call_expressionleaf", "strcpyleaf", "argument_listleaf", "(leaf", "var_char_ptrleaf", ",leaf", "string_literalleaf", "\"leaf", "\"leaf", ")leaf", ";leaf", "}leaf", "if_statementleaf", "ifleaf", "condition_clauseleaf", "(leaf", "unary_expressionleaf", "!leaf", "call_expressionleaf", "func_unkleaf", "argument_listleaf", "(leaf", "var_char_ptrleaf", ")leaf", ")leaf", "compound_statementleaf", "{leaf", "expression_statementleaf", "call_expressionleaf", "func_unkleaf", "argument_listleaf", "(leaf", "string_literalleaf", "\"leaf", "\"leaf", ")leaf", ";leaf", "expression_statementleaf", "call_expressionleaf", "func_unkleaf", "argument_listleaf", "(leaf", "1byte_numberleaf", ")leaf", ";leaf", "}leaf", "}leaf"]
["translation_unit", "function_definitionleaf", "voidleaf", "function_declaratorleaf", "func_voidleaf", "parameter_listleaf", "(leaf", ")leaf", "compound_statementleaf", "{leaf", "expression_statementleaf", "call_expressionleaf", "func_unkleaf", "argument_listleaf", "(leaf", ")leaf", ";leaf", "expression_statementleaf", "call_expressionleaf", "func_unkleaf", "argument_listleaf", "(leaf", ")leaf", ";leaf", "}leaf"]
["translation_unit", "void", "func_void", "(", ")", "{", "char", "*", "var_char_ptr", ";", "char", "var_char_array", "[", "1byte_number", "]", "=", "\"", "\"", ";", "var_char_ptr", "=", "var_char_array", ";", "if", "(", "1byte_number", "==", "1byte_number", ")", "{", "{", "WSADATA", "var_WSADATA", ";", "BOOL", "var_BOOL", "=", "FALSE", ";", "SOCKET", "var_SOCKET", "=", "INVALID_SOCKET", ";", "SOCKET", "var_SOCKET", "=", "INVALID_SOCKET", ";", "struct", "sockaddr_in", "var_struct_sockaddr_in", ";", "int", "var_int", ";", "do", "{", "if", "(", "WSAStartup", "(", "MAKEWORD", "(", "1byte_number", ",", "1byte_number", ")", ",", "&", "var_WSADATA", ")", "!=", "NO_ERROR", ")", "{", "break", ";", "}", "var_BOOL", "=", "1byte_number", ";", "var_SOCKET", "=", "socket", "(", "PF_INET", ",", "SOCK_STREAM", ",", "1byte_number", ")", ";", "if", "(", "var_SOCKET", "==", "INVALID_SOCKET", ")", "{", "break", ";", "}", "memset", "(", "&", "var_struct_sockaddr_in", ",", "1byte_number", ",", "sizeof", "(", "var_struct_sockaddr_in", ")", ")", ";", "var_struct_sockaddr_in", ".", "var_unk", "=", "AF_INET", ";", "var_struct_sockaddr_in", ".", "var_unk", ".", "var_unk", "=", "INADDR_ANY", ";", "var_struct_sockaddr_in", ".", "var_unk", "=", "func_unk", "(", "LISTEN_PORT", ")", ";", "if", "(", "SOCKET_ERROR", "==", "func_unk", "(", "var_SOCKET", ",", "(", "struct", "var_unk", "*", ")", "&", "var_struct_sockaddr_in", ",", "sizeof", "(", "var_struct_sockaddr_in", ")", ")", ")", "{", "break", ";", "}", "if", "(", "SOCKET_ERROR", "==", "func_unk", "(", "var_SOCKET", ",", "LISTEN_BACKLOG", ")", ")", "{", "break", ";", "}", "var_SOCKET", "=", "func_SOCKET", "(", "var_SOCKET", ",", "NULL", ",", "NULL", ")", ";", "if", "(", "var_SOCKET", "==", "INVALID_SOCKET", ")", "{", "break", ";", "}", "var_int", "=", "recv", "(", "var_SOCKET", ",", "var_char_ptr", ",", "1byte_number", "-", "1byte_number", ",", "1byte_number", ")", ";", "if", "(", "var_int", "==", "SOCKET_ERROR", "||", "var_int", "==", "1byte_number", ")", "{", "break", ";", "}", "var_char_ptr", "[", "var_int", "]", "=", "'", "'", ";", "}", "while", "(", "1byte_number", ")", ";", "if", "(", "var_SOCKET", "!=", "INVALID_SOCKET", ")", "{", "func_unk", "(", "var_SOCKET", ")", ";", "}", "if", "(", "var_SOCKET", "!=", "INVALID_SOCKET", ")", "{", "func_unk", "(", "var_SOCKET", ")", ";", "}", "if", "(", "var_BOOL", ")", "{", "WSACleanup", "(", ")", ";", "}", "}", "}", "if", "(", "!", "func_unk", "(", "var_char_ptr", ")", ")", "{", "func_unk", "(", "\"", "\"", ")", ";", "func_unk", "(", "1byte_number", ")", ";", "}", "}"]
["translation_unit", "static", "void", "func_static_void", "(", ")", "{", "char", "*", "var_char_ptr", ";", "char", "var_char_array", "[", "1byte_number", "]", "=", "\"", "\"", ";", "var_char_ptr", "=", "var_char_array", ";", "if", "(", "1byte_number", "!=", "1byte_number", ")", "{", "func_unk", "(", "\"", "\"", ")", ";", "}", "else", "{", "strcpy", "(", "var_char_ptr", ",", "\"", "\"", ")", ";", "}", "if", "(", "!", "func_unk", "(", "var_char_ptr", ")", ")", "{", "func_unk", "(", "\"", "\"", ")", ";", "func_unk", "(", "1byte_number", ")", ";", "}", "}"]
["translation_unit", "static", "void", "func_static_void", "(", ")", "{", "char", "*", "var_char_ptr", ";", "char", "var_char_array", "[", "1byte_number", "]", "=", "\"", "\"", ";", "var_char_ptr", "=", "var_char_array", ";", "if", "(", "1byte_number", "==", "1byte_number", ")", "{", "strcpy", "(", "var_char_ptr", ",", "\"", "\"", ")", ";", "}", "if", "(", "!", "func_unk", "(", "var_char_ptr", ")", ")", "{", "func_unk", "(", "\"", "\"", ")", ";", "func_unk", "(", "1byte_number", ")", ";", "}", "}"]
["translation_unit", "void", "func_void", "(", ")", "{", "func_unk", "(", ")", ";", "func_unk", "(", ")", ";", "}"]
["translation_unit", "void", "func_void", "(", ")", "{", "char", "*", "var_char_ptr", ";", "char", "var_char_array", "[", "1byte_number", "]", "=", "\"", "\"", ";", "var_char_ptr", "=", "var_char_array", ";", "if", "(", "1byte_number", "==", "1byte_number", ")", "{", "{", "WSADATA", "var_WSADATA", ";", "BOOL", "var_BOOL", "=", "FALSE", ";", "SOCKET", "var_SOCKET", "=", "INVALID_SOCKET", ";", "SOCKET", "var_SOCKET", "=", "INVALID_SOCKET", ";", "struct", "sockaddr_in", "var_struct_sockaddr_in", ";", "int", "var_int", ";", "do", "{", "if", "(", "WSAStartup", "(", "MAKEWORD", "(", "1byte_number", ",", "1byte_number", ")", ",", "&", "var_WSADATA", ")", "!=", "NO_ERROR", ")", "{", "break", ";", "}", "var_BOOL", "=", "1byte_number", ";", "var_SOCKET", "=", "socket", "(", "PF_INET", ",", "SOCK_STREAM", ",", "1byte_number", ")", ";", "if", "(", "var_SOCKET", "==", "INVALID_SOCKET", ")", "{", "break", ";", "}", "memset", "(", "&", "var_struct_sockaddr_in", ",", "1byte_number", ",", "sizeof", "(", "var_struct_sockaddr_in", ")", ")", ";", "var_struct_sockaddr_in", ".", "var_unk", "=", "AF_INET", ";", "var_struct_sockaddr_in", ".", "var_unk", ".", "var_unk", "=", "INADDR_ANY", ";", "var_struct_sockaddr_in", ".", "var_unk", "=", "func_unk", "(", "LISTEN_PORT", ")", ";", "if", "(", "SOCKET_ERROR", "==", "func_unk", "(", "var_SOCKET", ",", "(", "struct", "var_unk", "*", ")", "&", "var_struct_sockaddr_in", ",", "sizeof", "(", "var_struct_sockaddr_in", ")", ")", ")", "{", "break", ";", "}", "if", "(", "SOCKET_ERROR", "==", "func_unk", "(", "var_SOCKET", ",", "LISTEN_BACKLOG", ")", ")", "{", "break", ";", "}", "var_SOCKET", "=", "func_SOCKET", "(", "var_SOCKET", ",", "NULL", ",", "NULL", ")", ";", "if", "(", "var_SOCKET", "==", "INVALID_SOCKET", ")", "{", "break", ";", "}", "var_int", "=", "recv", "(", "var_SOCKET", ",", "var_char_ptr", ",", "1byte_number", "-", "1byte_number", ",", "1byte_number", ")", ";", "if", "(", "var_int", "==", "SOCKET_ERROR", "||", "var_int", "==", "1byte_number", ")", "{", "break", ";", "}", "var_char_ptr", "[", "var_int", "]", "=", "'", "'", ";", "}", "while", "(", "1byte_number", ")", ";", "if", "(", "var_SOCKET", "!=", "INVALID_SOCKET", ")", "{", "func_unk", "(", "var_SOCKET", ")", ";", "}", "if", "(", "var_SOCKET", "!=", "INVALID_SOCKET", ")", "{", "func_unk", "(", "var_SOCKET", ")", ";", "}", "if", "(", "var_BOOL", ")", "{", "WSACleanup", "(", ")", ";", "}", "}", "}", "if", "(", "!", "func_unk", "(", "var_char_ptr", ")", ")", "{", "func_unk", "(", "\"", "\"", ")", ";", "func_unk", "(", "1byte_number", ")", ";", "}", "}"]
["translation_unit", "static", "void", "func_static_void", "(", ")", "{", "char", "*", "var_char_ptr", ";", "char", "var_char_array", "[", "1byte_number", "]", "=", "\"", "\"", ";", "var_char_ptr", "=", "var_char_array", ";", "if", "(", "1byte_number", "!=", "1byte_number", ")", "{", "func_unk", "(", "\"", "\"", ")", ";", "}", "else", "{", "strcpy", "(", "var_char_ptr", ",", "\"", "\"", ")", ";", "}", "if", "(", "!", "func_unk", "(", "var_char_ptr", ")", ")", "{", "func_unk", "(", "\"", "\"", ")", ";", "func_unk", "(", "1byte_number", ")", ";", "}", "}"]
["translation_unit", "static", "void", "func_static_void", "(", ")", "{", "char", "*", "var_char_ptr", ";", "char", "var_char_array", "[", "1byte_number", "]", "=", "\"", "\"", ";", "var_char_ptr", "=", "var_char_array", ";", "if", "(", "1byte_number", "==", "1byte_number", ")", "{", "strcpy", "(", "var_char_ptr", ",", "\"", "\"", ")", ";", "}", "if", "(", "!", "func_unk", "(", "var_char_ptr", ")", ")", "{", "func_unk", "(", "\"", "\"", ")", ";", "func_unk", "(", "1byte_number", ")", ";", "}", "}"]
["translation_unit", "void", "func_void", "(", ")", "{", "func_unk", "(", ")", ";", "func_unk", "(", ")", ";", "}"]
