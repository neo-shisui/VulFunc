void void_func_1()
{
char * char_ptr_var1;
char char_array_var2[100] = "";
char_ptr_var1 = char_array_var2;
if(5==5)
{
{
WSADATA WSADATA_var3;
BOOL BOOL_var4 = FALSE;
SOCKET SOCKET_var5 = INVALID_SOCKET;
SOCKET SOCKET_var6 = INVALID_SOCKET;
struct sockaddr_in struct_sockaddr_in_var7;
int int_var8;
do
{
if (WSAStartup(MAKEWORD(2,2), &WSADATA_var3) != NO_ERROR)
{
break;
}
BOOL_var4 = 1;
SOCKET_var5 = socket(PF_INET, SOCK_STREAM, 0);
if (SOCKET_var5 == INVALID_SOCKET)
{
break;
}
memset(&struct_sockaddr_in_var7, 0, sizeof(struct_sockaddr_in_var7));
struct_sockaddr_in_var7.var_9 = AF_INET;
struct_sockaddr_in_var7.var_10.var_11 = INADDR_ANY;
struct_sockaddr_in_var7.var_12 = func_2(LISTEN_PORT);
if (SOCKET_ERROR == func_3(SOCKET_var5, (struct var_13*)&struct_sockaddr_in_var7, sizeof(struct_sockaddr_in_var7)))
{
break;
}
if (SOCKET_ERROR == func_4(SOCKET_var5, LISTEN_BACKLOG))
{
break;
}
SOCKET_var6 = func_5(SOCKET_var5, NULL, NULL);
if (SOCKET_var6 == INVALID_SOCKET)
{
break;
}
int_var8 = recv(SOCKET_var6, char_ptr_var1, 100 - 1, 0);
if (int_var8 == SOCKET_ERROR || int_var8 == 0)
{
break;
}
char_ptr_var1[int_var8] = '';
}
while (0);
if (SOCKET_var6 != INVALID_SOCKET)
{
func_6(SOCKET_var6);
}
if (SOCKET_var5 != INVALID_SOCKET)
{
func_6(SOCKET_var5);
}
if (BOOL_var4)
{
WSACleanup();
}
}
}
if (!func_7(char_ptr_var1))
{
func_8("");
func_9(1);
}
}

static void static_void_func_1()
{
char * char_ptr_var1;
char char_array_var2[100] = "";
char_ptr_var1 = char_array_var2;
if(5!=5)
{
func_2("");
}
else
{
strcpy(char_ptr_var1, "");
}
if (!func_3(char_ptr_var1))
{
func_2("");
func_4(1);
}
}

static void static_void_func_1()
{
char * char_ptr_var1;
char char_array_var2[100] = "";
char_ptr_var1 = char_array_var2;
if(5==5)
{
strcpy(char_ptr_var1, "");
}
if (!func_2(char_ptr_var1))
{
func_3("");
func_4(1);
}
}

void void_func_1()
{
func_2();
func_3();
}

void void_func_1()
{
char * char_ptr_var1;
char char_array_var2[100] = "";
char_ptr_var1 = char_array_var2;
if(5==5)
{
{
WSADATA WSADATA_var3;
BOOL BOOL_var4 = FALSE;
SOCKET SOCKET_var5 = INVALID_SOCKET;
SOCKET SOCKET_var6 = INVALID_SOCKET;
struct sockaddr_in struct_sockaddr_in_var7;
int int_var8;
do
{
if (WSAStartup(MAKEWORD(2,2), &WSADATA_var3) != NO_ERROR)
{
break;
}
BOOL_var4 = 1;
SOCKET_var5 = socket(PF_INET, SOCK_STREAM, 0);
if (SOCKET_var5 == INVALID_SOCKET)
{
break;
}
memset(&struct_sockaddr_in_var7, 0, sizeof(struct_sockaddr_in_var7));
struct_sockaddr_in_var7.var_9 = AF_INET;
struct_sockaddr_in_var7.var_10.var_11 = INADDR_ANY;
struct_sockaddr_in_var7.var_12 = func_2(LISTEN_PORT);
if (SOCKET_ERROR == func_3(SOCKET_var5, (struct var_13*)&struct_sockaddr_in_var7, sizeof(struct_sockaddr_in_var7)))
{
break;
}
if (SOCKET_ERROR == func_4(SOCKET_var5, LISTEN_BACKLOG))
{
break;
}
SOCKET_var6 = func_5(SOCKET_var5, NULL, NULL);
if (SOCKET_var6 == INVALID_SOCKET)
{
break;
}
int_var8 = recv(SOCKET_var6, char_ptr_var1, 100 - 1, 0);
if (int_var8 == SOCKET_ERROR || int_var8 == 0)
{
break;
}
char_ptr_var1[int_var8] = '';
}
while (0);
if (SOCKET_var6 != INVALID_SOCKET)
{
func_6(SOCKET_var6);
}
if (SOCKET_var5 != INVALID_SOCKET)
{
func_6(SOCKET_var5);
}
if (BOOL_var4)
{
WSACleanup();
}
}
}
if (!func_7(char_ptr_var1))
{
func_8("");
func_9(1);
}
}

static void static_void_func_1()
{
char * char_ptr_var1;
char char_array_var2[100] = "";
char_ptr_var1 = char_array_var2;
if(5!=5)
{
func_2("");
}
else
{
strcpy(char_ptr_var1, "");
}
if (!func_3(char_ptr_var1))
{
func_2("");
func_4(1);
}
}

static void static_void_func_1()
{
char * char_ptr_var1;
char char_array_var2[100] = "";
char_ptr_var1 = char_array_var2;
if(5==5)
{
strcpy(char_ptr_var1, "");
}
if (!func_2(char_ptr_var1))
{
func_3("");
func_4(1);
}
}

void void_func_1()
{
func_2();
func_3();
}

void void_func_1()
{
char * char_ptr_var1;
char char_array_var2[100] = "";
char_ptr_var1 = char_array_var2;
if(5==5)
{
{
WSADATA WSADATA_var3;
BOOL BOOL_var4 = FALSE;
SOCKET SOCKET_var5 = INVALID_SOCKET;
SOCKET SOCKET_var6 = INVALID_SOCKET;
struct sockaddr_in struct_sockaddr_in_var7;
int int_var8;
do
{
if (WSAStartup(MAKEWORD(2,2), &WSADATA_var3) != NO_ERROR)
{
break;
}
BOOL_var4 = 1;
SOCKET_var5 = socket(PF_INET, SOCK_STREAM, 0);
if (SOCKET_var5 == INVALID_SOCKET)
{
break;
}
memset(&struct_sockaddr_in_var7, 0, sizeof(struct_sockaddr_in_var7));
struct_sockaddr_in_var7.var_9 = AF_INET;
struct_sockaddr_in_var7.var_10.var_11 = INADDR_ANY;
struct_sockaddr_in_var7.var_12 = func_2(LISTEN_PORT);
if (SOCKET_ERROR == func_3(SOCKET_var5, (struct var_13*)&struct_sockaddr_in_var7, sizeof(struct_sockaddr_in_var7)))
{
break;
}
if (SOCKET_ERROR == func_4(SOCKET_var5, LISTEN_BACKLOG))
{
break;
}
SOCKET_var6 = func_5(SOCKET_var5, NULL, NULL);
if (SOCKET_var6 == INVALID_SOCKET)
{
break;
}
int_var8 = recv(SOCKET_var6, char_ptr_var1, 100 - 1, 0);
if (int_var8 == SOCKET_ERROR || int_var8 == 0)
{
break;
}
char_ptr_var1[int_var8] = '';
}
while (0);
if (SOCKET_var6 != INVALID_SOCKET)
{
func_6(SOCKET_var6);
}
if (SOCKET_var5 != INVALID_SOCKET)
{
func_6(SOCKET_var5);
}
if (BOOL_var4)
{
WSACleanup();
}
}
}
if (!func_7(char_ptr_var1))
{
func_8("");
func_9(1);
}
}

static void static_void_func_1()
{
char * char_ptr_var1;
char char_array_var2[100] = "";
char_ptr_var1 = char_array_var2;
if(5!=5)
{
func_2("");
}
else
{
strcpy(char_ptr_var1, "");
}
if (!func_3(char_ptr_var1))
{
func_2("");
func_4(1);
}
}

static void static_void_func_1()
{
char * char_ptr_var1;
char char_array_var2[100] = "";
char_ptr_var1 = char_array_var2;
if(5==5)
{
strcpy(char_ptr_var1, "");
}
if (!func_2(char_ptr_var1))
{
func_3("");
func_4(1);
}
}

void void_func_1()
{
func_2();
func_3();
}

void void_func_1()
{
char * char_ptr_var1;
char char_array_var2[100] = "";
char_ptr_var1 = char_array_var2;
if(5==5)
{
{
WSADATA WSADATA_var3;
BOOL BOOL_var4 = FALSE;
SOCKET SOCKET_var5 = INVALID_SOCKET;
SOCKET SOCKET_var6 = INVALID_SOCKET;
struct sockaddr_in struct_sockaddr_in_var7;
int int_var8;
do
{
if (WSAStartup(MAKEWORD(2,2), &WSADATA_var3) != NO_ERROR)
{
break;
}
BOOL_var4 = 1;
SOCKET_var5 = socket(PF_INET, SOCK_STREAM, 0);
if (SOCKET_var5 == INVALID_SOCKET)
{
break;
}
memset(&struct_sockaddr_in_var7, 0, sizeof(struct_sockaddr_in_var7));
struct_sockaddr_in_var7.var_9 = AF_INET;
struct_sockaddr_in_var7.var_10.var_11 = INADDR_ANY;
struct_sockaddr_in_var7.var_12 = func_2(LISTEN_PORT);
if (SOCKET_ERROR == func_3(SOCKET_var5, (struct var_13*)&struct_sockaddr_in_var7, sizeof(struct_sockaddr_in_var7)))
{
break;
}
if (SOCKET_ERROR == func_4(SOCKET_var5, LISTEN_BACKLOG))
{
break;
}
SOCKET_var6 = func_5(SOCKET_var5, NULL, NULL);
if (SOCKET_var6 == INVALID_SOCKET)
{
break;
}
int_var8 = recv(SOCKET_var6, char_ptr_var1, 100 - 1, 0);
if (int_var8 == SOCKET_ERROR || int_var8 == 0)
{
break;
}
char_ptr_var1[int_var8] = '';
}
while (0);
if (SOCKET_var6 != INVALID_SOCKET)
{
func_6(SOCKET_var6);
}
if (SOCKET_var5 != INVALID_SOCKET)
{
func_6(SOCKET_var5);
}
if (BOOL_var4)
{
WSACleanup();
}
}
}
if (!func_7(char_ptr_var1))
{
func_8("");
func_9(1);
}
}

static void static_void_func_1()
{
char * char_ptr_var1;
char char_array_var2[100] = "";
char_ptr_var1 = char_array_var2;
if(5!=5)
{
func_2("");
}
else
{
strcpy(char_ptr_var1, "");
}
if (!func_3(char_ptr_var1))
{
func_2("");
func_4(1);
}
}

static void static_void_func_1()
{
char * char_ptr_var1;
char char_array_var2[100] = "";
char_ptr_var1 = char_array_var2;
if(5==5)
{
strcpy(char_ptr_var1, "");
}
if (!func_2(char_ptr_var1))
{
func_3("");
func_4(1);
}
}

void void_func_1()
{
func_2();
func_3();
}

void void_func_1()
{
char * char_ptr_var1;
char char_array_var2[100] = "";
char_ptr_var1 = char_array_var2;
if(5==5)
{
{
WSADATA WSADATA_var3;
BOOL BOOL_var4 = FALSE;
SOCKET SOCKET_var5 = INVALID_SOCKET;
SOCKET SOCKET_var6 = INVALID_SOCKET;
struct sockaddr_in struct_sockaddr_in_var7;
int int_var8;
do
{
if (WSAStartup(MAKEWORD(2,2), &WSADATA_var3) != NO_ERROR)
{
break;
}
BOOL_var4 = 1;
SOCKET_var5 = socket(PF_INET, SOCK_STREAM, 0);
if (SOCKET_var5 == INVALID_SOCKET)
{
break;
}
memset(&struct_sockaddr_in_var7, 0, sizeof(struct_sockaddr_in_var7));
struct_sockaddr_in_var7.var_9 = AF_INET;
struct_sockaddr_in_var7.var_10.var_11 = INADDR_ANY;
struct_sockaddr_in_var7.var_12 = func_2(LISTEN_PORT);
if (SOCKET_ERROR == func_3(SOCKET_var5, (struct var_13*)&struct_sockaddr_in_var7, sizeof(struct_sockaddr_in_var7)))
{
break;
}
if (SOCKET_ERROR == func_4(SOCKET_var5, LISTEN_BACKLOG))
{
break;
}
SOCKET_var6 = func_5(SOCKET_var5, NULL, NULL);
if (SOCKET_var6 == INVALID_SOCKET)
{
break;
}
int_var8 = recv(SOCKET_var6, char_ptr_var1, 100 - 1, 0);
if (int_var8 == SOCKET_ERROR || int_var8 == 0)
{
break;
}
char_ptr_var1[int_var8] = '';
}
while (0);
if (SOCKET_var6 != INVALID_SOCKET)
{
func_6(SOCKET_var6);
}
if (SOCKET_var5 != INVALID_SOCKET)
{
func_6(SOCKET_var5);
}
if (BOOL_var4)
{
WSACleanup();
}
}
}
if (!func_7(char_ptr_var1))
{
func_8("");
func_9(1);
}
}

static void static_void_func_1()
{
char * char_ptr_var1;
char char_array_var2[100] = "";
char_ptr_var1 = char_array_var2;
if(5!=5)
{
func_2("");
}
else
{
strcpy(char_ptr_var1, "");
}
if (!func_3(char_ptr_var1))
{
func_2("");
func_4(1);
}
}

static void static_void_func_1()
{
char * char_ptr_var1;
char char_array_var2[100] = "";
char_ptr_var1 = char_array_var2;
if(5==5)
{
strcpy(char_ptr_var1, "");
}
if (!func_2(char_ptr_var1))
{
func_3("");
func_4(1);
}
}

void void_func_1()
{
func_2();
func_3();
}

void void_func_1()
{
char * char_ptr_var1;
char char_array_var2[100] = "";
char_ptr_var1 = char_array_var2;
if(5==5)
{
{
WSADATA WSADATA_var3;
BOOL BOOL_var4 = FALSE;
SOCKET SOCKET_var5 = INVALID_SOCKET;
SOCKET SOCKET_var6 = INVALID_SOCKET;
struct sockaddr_in struct_sockaddr_in_var7;
int int_var8;
do
{
if (WSAStartup(MAKEWORD(2,2), &WSADATA_var3) != NO_ERROR)
{
break;
}
BOOL_var4 = 1;
SOCKET_var5 = socket(PF_INET, SOCK_STREAM, 0);
if (SOCKET_var5 == INVALID_SOCKET)
{
break;
}
memset(&struct_sockaddr_in_var7, 0, sizeof(struct_sockaddr_in_var7));
struct_sockaddr_in_var7.var_9 = AF_INET;
struct_sockaddr_in_var7.var_10.var_11 = INADDR_ANY;
struct_sockaddr_in_var7.var_12 = func_2(LISTEN_PORT);
if (SOCKET_ERROR == func_3(SOCKET_var5, (struct var_13*)&struct_sockaddr_in_var7, sizeof(struct_sockaddr_in_var7)))
{
break;
}
if (SOCKET_ERROR == func_4(SOCKET_var5, LISTEN_BACKLOG))
{
break;
}
SOCKET_var6 = func_5(SOCKET_var5, NULL, NULL);
if (SOCKET_var6 == INVALID_SOCKET)
{
break;
}
int_var8 = recv(SOCKET_var6, char_ptr_var1, 100 - 1, 0);
if (int_var8 == SOCKET_ERROR || int_var8 == 0)
{
break;
}
char_ptr_var1[int_var8] = '';
}
while (0);
if (SOCKET_var6 != INVALID_SOCKET)
{
func_6(SOCKET_var6);
}
if (SOCKET_var5 != INVALID_SOCKET)
{
func_6(SOCKET_var5);
}
if (BOOL_var4)
{
WSACleanup();
}
}
}
if (!func_7(char_ptr_var1))
{
func_8("");
func_9(1);
}
}

static void static_void_func_1()
{
char * char_ptr_var1;
char char_array_var2[100] = "";
char_ptr_var1 = char_array_var2;
if(5!=5)
{
func_2("");
}
else
{
strcpy(char_ptr_var1, "");
}
if (!func_3(char_ptr_var1))
{
func_2("");
func_4(1);
}
}

static void static_void_func_1()
{
char * char_ptr_var1;
char char_array_var2[100] = "";
char_ptr_var1 = char_array_var2;
if(5==5)
{
strcpy(char_ptr_var1, "");
}
if (!func_2(char_ptr_var1))
{
func_3("");
func_4(1);
}
}

void void_func_1()
{
func_2();
func_3();
}

void void_func_1()
{
char * char_ptr_var1;
char char_array_var2[100] = "";
char_ptr_var1 = char_array_var2;
if(5==5)
{
{
WSADATA WSADATA_var3;
BOOL BOOL_var4 = FALSE;
SOCKET SOCKET_var5 = INVALID_SOCKET;
SOCKET SOCKET_var6 = INVALID_SOCKET;
struct sockaddr_in struct_sockaddr_in_var7;
int int_var8;
do
{
if (WSAStartup(MAKEWORD(2,2), &WSADATA_var3) != NO_ERROR)
{
break;
}
BOOL_var4 = 1;
SOCKET_var5 = socket(PF_INET, SOCK_STREAM, 0);
if (SOCKET_var5 == INVALID_SOCKET)
{
break;
}
memset(&struct_sockaddr_in_var7, 0, sizeof(struct_sockaddr_in_var7));
struct_sockaddr_in_var7.var_9 = AF_INET;
struct_sockaddr_in_var7.var_10.var_11 = INADDR_ANY;
struct_sockaddr_in_var7.var_12 = func_2(LISTEN_PORT);
if (SOCKET_ERROR == func_3(SOCKET_var5, (struct var_13*)&struct_sockaddr_in_var7, sizeof(struct_sockaddr_in_var7)))
{
break;
}
if (SOCKET_ERROR == func_4(SOCKET_var5, LISTEN_BACKLOG))
{
break;
}
SOCKET_var6 = func_5(SOCKET_var5, NULL, NULL);
if (SOCKET_var6 == INVALID_SOCKET)
{
break;
}
int_var8 = recv(SOCKET_var6, char_ptr_var1, 100 - 1, 0);
if (int_var8 == SOCKET_ERROR || int_var8 == 0)
{
break;
}
char_ptr_var1[int_var8] = '';
}
while (0);
if (SOCKET_var6 != INVALID_SOCKET)
{
func_6(SOCKET_var6);
}
if (SOCKET_var5 != INVALID_SOCKET)
{
func_6(SOCKET_var5);
}
if (BOOL_var4)
{
WSACleanup();
}
}
}
if (!func_7(char_ptr_var1))
{
func_8("");
func_9(1);
}
}

static void static_void_func_1()
{
char * char_ptr_var1;
char char_array_var2[100] = "";
char_ptr_var1 = char_array_var2;
if(5!=5)
{
func_2("");
}
else
{
strcpy(char_ptr_var1, "");
}
if (!func_3(char_ptr_var1))
{
func_2("");
func_4(1);
}
}

static void static_void_func_1()
{
char * char_ptr_var1;
char char_array_var2[100] = "";
char_ptr_var1 = char_array_var2;
if(5==5)
{
strcpy(char_ptr_var1, "");
}
if (!func_2(char_ptr_var1))
{
func_3("");
func_4(1);
}
}

void void_func_1()
{
func_2();
func_3();
}

void void_func_1()
{
char * char_ptr_var1;
char char_array_var2[100] = "";
char_ptr_var1 = char_array_var2;
if(5==5)
{
{
WSADATA WSADATA_var3;
BOOL BOOL_var4 = FALSE;
SOCKET SOCKET_var5 = INVALID_SOCKET;
SOCKET SOCKET_var6 = INVALID_SOCKET;
struct sockaddr_in struct_sockaddr_in_var7;
int int_var8;
do
{
if (WSAStartup(MAKEWORD(2,2), &WSADATA_var3) != NO_ERROR)
{
break;
}
BOOL_var4 = 1;
SOCKET_var5 = socket(PF_INET, SOCK_STREAM, 0);
if (SOCKET_var5 == INVALID_SOCKET)
{
break;
}
memset(&struct_sockaddr_in_var7, 0, sizeof(struct_sockaddr_in_var7));
struct_sockaddr_in_var7.var_9 = AF_INET;
struct_sockaddr_in_var7.var_10.var_11 = INADDR_ANY;
struct_sockaddr_in_var7.var_12 = func_2(LISTEN_PORT);
if (SOCKET_ERROR == func_3(SOCKET_var5, (struct var_13*)&struct_sockaddr_in_var7, sizeof(struct_sockaddr_in_var7)))
{
break;
}
if (SOCKET_ERROR == func_4(SOCKET_var5, LISTEN_BACKLOG))
{
break;
}
SOCKET_var6 = func_5(SOCKET_var5, NULL, NULL);
if (SOCKET_var6 == INVALID_SOCKET)
{
break;
}
int_var8 = recv(SOCKET_var6, char_ptr_var1, 100 - 1, 0);
if (int_var8 == SOCKET_ERROR || int_var8 == 0)
{
break;
}
char_ptr_var1[int_var8] = '';
}
while (0);
if (SOCKET_var6 != INVALID_SOCKET)
{
func_6(SOCKET_var6);
}
if (SOCKET_var5 != INVALID_SOCKET)
{
func_6(SOCKET_var5);
}
if (BOOL_var4)
{
WSACleanup();
}
}
}
if (!func_7(char_ptr_var1))
{
func_8("");
func_9(1);
}
}

static void static_void_func_1()
{
char * char_ptr_var1;
char char_array_var2[100] = "";
char_ptr_var1 = char_array_var2;
if(5!=5)
{
func_2("");
}
else
{
strcpy(char_ptr_var1, "");
}
if (!func_3(char_ptr_var1))
{
func_2("");
func_4(1);
}
}

static void static_void_func_1()
{
char * char_ptr_var1;
char char_array_var2[100] = "";
char_ptr_var1 = char_array_var2;
if(5==5)
{
strcpy(char_ptr_var1, "");
}
if (!func_2(char_ptr_var1))
{
func_3("");
func_4(1);
}
}

void void_func_1()
{
func_2();
func_3();
}

void void_func_1()
{
char * char_ptr_var1;
char char_array_var2[100] = "";
char_ptr_var1 = char_array_var2;
if(5==5)
{
{
WSADATA WSADATA_var3;
BOOL BOOL_var4 = FALSE;
SOCKET SOCKET_var5 = INVALID_SOCKET;
SOCKET SOCKET_var6 = INVALID_SOCKET;
struct sockaddr_in struct_sockaddr_in_var7;
int int_var8;
do
{
if (WSAStartup(MAKEWORD(2,2), &WSADATA_var3) != NO_ERROR)
{
break;
}
BOOL_var4 = 1;
SOCKET_var5 = socket(PF_INET, SOCK_STREAM, 0);
if (SOCKET_var5 == INVALID_SOCKET)
{
break;
}
memset(&struct_sockaddr_in_var7, 0, sizeof(struct_sockaddr_in_var7));
struct_sockaddr_in_var7.var_9 = AF_INET;
struct_sockaddr_in_var7.var_10.var_11 = INADDR_ANY;
struct_sockaddr_in_var7.var_12 = func_2(LISTEN_PORT);
if (SOCKET_ERROR == func_3(SOCKET_var5, (struct var_13*)&struct_sockaddr_in_var7, sizeof(struct_sockaddr_in_var7)))
{
break;
}
if (SOCKET_ERROR == func_4(SOCKET_var5, LISTEN_BACKLOG))
{
break;
}
SOCKET_var6 = func_5(SOCKET_var5, NULL, NULL);
if (SOCKET_var6 == INVALID_SOCKET)
{
break;
}
int_var8 = recv(SOCKET_var6, char_ptr_var1, 100 - 1, 0);
if (int_var8 == SOCKET_ERROR || int_var8 == 0)
{
break;
}
char_ptr_var1[int_var8] = '';
}
while (0);
if (SOCKET_var6 != INVALID_SOCKET)
{
func_6(SOCKET_var6);
}
if (SOCKET_var5 != INVALID_SOCKET)
{
func_6(SOCKET_var5);
}
if (BOOL_var4)
{
WSACleanup();
}
}
}
if (!func_7(char_ptr_var1))
{
func_8("");
func_9(1);
}
}

static void static_void_func_1()
{
char * char_ptr_var1;
char char_array_var2[100] = "";
char_ptr_var1 = char_array_var2;
if(5!=5)
{
func_2("");
}
else
{
strcpy(char_ptr_var1, "");
}
if (!func_3(char_ptr_var1))
{
func_2("");
func_4(1);
}
}

static void static_void_func_1()
{
char * char_ptr_var1;
char char_array_var2[100] = "";
char_ptr_var1 = char_array_var2;
if(5==5)
{
strcpy(char_ptr_var1, "");
}
if (!func_2(char_ptr_var1))
{
func_3("");
func_4(1);
}
}

void void_func_1()
{
func_2();
func_3();
}

void void_func_1()
{
char * char_ptr_var1;
char char_array_var2[100] = "";
char_ptr_var1 = char_array_var2;
if(5==5)
{
{
WSADATA WSADATA_var3;
BOOL BOOL_var4 = FALSE;
SOCKET SOCKET_var5 = INVALID_SOCKET;
SOCKET SOCKET_var6 = INVALID_SOCKET;
struct sockaddr_in struct_sockaddr_in_var7;
int int_var8;
do
{
if (WSAStartup(MAKEWORD(2,2), &WSADATA_var3) != NO_ERROR)
{
break;
}
BOOL_var4 = 1;
SOCKET_var5 = socket(PF_INET, SOCK_STREAM, 0);
if (SOCKET_var5 == INVALID_SOCKET)
{
break;
}
memset(&struct_sockaddr_in_var7, 0, sizeof(struct_sockaddr_in_var7));
struct_sockaddr_in_var7.var_9 = AF_INET;
struct_sockaddr_in_var7.var_10.var_11 = INADDR_ANY;
struct_sockaddr_in_var7.var_12 = func_2(LISTEN_PORT);
if (SOCKET_ERROR == func_3(SOCKET_var5, (struct var_13*)&struct_sockaddr_in_var7, sizeof(struct_sockaddr_in_var7)))
{
break;
}
if (SOCKET_ERROR == func_4(SOCKET_var5, LISTEN_BACKLOG))
{
break;
}
SOCKET_var6 = func_5(SOCKET_var5, NULL, NULL);
if (SOCKET_var6 == INVALID_SOCKET)
{
break;
}
int_var8 = recv(SOCKET_var6, char_ptr_var1, 100 - 1, 0);
if (int_var8 == SOCKET_ERROR || int_var8 == 0)
{
break;
}
char_ptr_var1[int_var8] = '';
}
while (0);
if (SOCKET_var6 != INVALID_SOCKET)
{
func_6(SOCKET_var6);
}
if (SOCKET_var5 != INVALID_SOCKET)
{
func_6(SOCKET_var5);
}
if (BOOL_var4)
{
WSACleanup();
}
}
}
if (!func_7(char_ptr_var1))
{
func_8("");
func_9(1);
}
}

static void static_void_func_1()
{
char * char_ptr_var1;
char char_array_var2[100] = "";
char_ptr_var1 = char_array_var2;
if(5!=5)
{
func_2("");
}
else
{
strcpy(char_ptr_var1, "");
}
if (!func_3(char_ptr_var1))
{
func_2("");
func_4(1);
}
}

static void static_void_func_1()
{
char * char_ptr_var1;
char char_array_var2[100] = "";
char_ptr_var1 = char_array_var2;
if(5==5)
{
strcpy(char_ptr_var1, "");
}
if (!func_2(char_ptr_var1))
{
func_3("");
func_4(1);
}
}

void void_func_1()
{
func_2();
func_3();
}

void func_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5==5)
{
{
WSADATA var_WSADATA;
BOOL var_BOOL = FALSE;
SOCKET var_SOCKET = INVALID_SOCKET;
SOCKET var_SOCKET = INVALID_SOCKET;
struct sockaddr_in var_struct_sockaddr_in;
int var_int;
do
{
if (WSAStartup(MAKEWORD(2,2), &var_WSADATA) != NO_ERROR)
{
break;
}
var_BOOL = 1;
var_SOCKET = socket(PF_INET, SOCK_STREAM, 0);
if (var_SOCKET == INVALID_SOCKET)
{
break;
}
memset(&var_struct_sockaddr_in, 0, sizeof(var_struct_sockaddr_in));
var_struct_sockaddr_in.var_unk = AF_INET;
var_struct_sockaddr_in.var_unk.var_unk = INADDR_ANY;
var_struct_sockaddr_in.var_unk = func_unk(LISTEN_PORT);
if (SOCKET_ERROR == func_unk(var_SOCKET, (struct var_unk*)&var_struct_sockaddr_in, sizeof(var_struct_sockaddr_in)))
{
break;
}
if (SOCKET_ERROR == func_unk(var_SOCKET, LISTEN_BACKLOG))
{
break;
}
var_SOCKET = func_SOCKET(var_SOCKET, NULL, NULL);
if (var_SOCKET == INVALID_SOCKET)
{
break;
}
var_int = recv(var_SOCKET, var_char_ptr, 100 - 1, 0);
if (var_int == SOCKET_ERROR || var_int == 0)
{
break;
}
var_char_ptr[var_int] = '';
}
while (0);
if (var_SOCKET != INVALID_SOCKET)
{
func_unk(var_SOCKET);
}
if (var_SOCKET != INVALID_SOCKET)
{
func_unk(var_SOCKET);
}
if (var_BOOL)
{
WSACleanup();
}
}
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

static void func_static_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5!=5)
{
func_unk("");
}
else
{
strcpy(var_char_ptr, "");
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

static void func_static_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5==5)
{
strcpy(var_char_ptr, "");
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

void func_void()
{
func_unk();
func_unk();
}

void func_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5==5)
{
{
WSADATA var_WSADATA;
BOOL var_BOOL = FALSE;
SOCKET var_SOCKET = INVALID_SOCKET;
SOCKET var_SOCKET = INVALID_SOCKET;
struct sockaddr_in var_struct_sockaddr_in;
int var_int;
do
{
if (WSAStartup(MAKEWORD(2,2), &var_WSADATA) != NO_ERROR)
{
break;
}
var_BOOL = 1;
var_SOCKET = socket(PF_INET, SOCK_STREAM, 0);
if (var_SOCKET == INVALID_SOCKET)
{
break;
}
memset(&var_struct_sockaddr_in, 0, sizeof(var_struct_sockaddr_in));
var_struct_sockaddr_in.var_unk = AF_INET;
var_struct_sockaddr_in.var_unk.var_unk = INADDR_ANY;
var_struct_sockaddr_in.var_unk = func_unk(LISTEN_PORT);
if (SOCKET_ERROR == func_unk(var_SOCKET, (struct var_unk*)&var_struct_sockaddr_in, sizeof(var_struct_sockaddr_in)))
{
break;
}
if (SOCKET_ERROR == func_unk(var_SOCKET, LISTEN_BACKLOG))
{
break;
}
var_SOCKET = func_SOCKET(var_SOCKET, NULL, NULL);
if (var_SOCKET == INVALID_SOCKET)
{
break;
}
var_int = recv(var_SOCKET, var_char_ptr, 100 - 1, 0);
if (var_int == SOCKET_ERROR || var_int == 0)
{
break;
}
var_char_ptr[var_int] = '';
}
while (0);
if (var_SOCKET != INVALID_SOCKET)
{
func_unk(var_SOCKET);
}
if (var_SOCKET != INVALID_SOCKET)
{
func_unk(var_SOCKET);
}
if (var_BOOL)
{
WSACleanup();
}
}
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

static void func_static_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5!=5)
{
func_unk("");
}
else
{
strcpy(var_char_ptr, "");
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

static void func_static_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5==5)
{
strcpy(var_char_ptr, "");
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

void func_void()
{
func_unk();
func_unk();
}

void func_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5==5)
{
{
WSADATA var_WSADATA;
BOOL var_BOOL = FALSE;
SOCKET var_SOCKET = INVALID_SOCKET;
SOCKET var_SOCKET = INVALID_SOCKET;
struct sockaddr_in var_struct_sockaddr_in;
int var_int;
do
{
if (WSAStartup(MAKEWORD(2,2), &var_WSADATA) != NO_ERROR)
{
break;
}
var_BOOL = 1;
var_SOCKET = socket(PF_INET, SOCK_STREAM, 0);
if (var_SOCKET == INVALID_SOCKET)
{
break;
}
memset(&var_struct_sockaddr_in, 0, sizeof(var_struct_sockaddr_in));
var_struct_sockaddr_in.var_unk = AF_INET;
var_struct_sockaddr_in.var_unk.var_unk = INADDR_ANY;
var_struct_sockaddr_in.var_unk = func_unk(LISTEN_PORT);
if (SOCKET_ERROR == func_unk(var_SOCKET, (struct var_unk*)&var_struct_sockaddr_in, sizeof(var_struct_sockaddr_in)))
{
break;
}
if (SOCKET_ERROR == func_unk(var_SOCKET, LISTEN_BACKLOG))
{
break;
}
var_SOCKET = func_SOCKET(var_SOCKET, NULL, NULL);
if (var_SOCKET == INVALID_SOCKET)
{
break;
}
var_int = recv(var_SOCKET, var_char_ptr, 100 - 1, 0);
if (var_int == SOCKET_ERROR || var_int == 0)
{
break;
}
var_char_ptr[var_int] = '';
}
while (0);
if (var_SOCKET != INVALID_SOCKET)
{
func_unk(var_SOCKET);
}
if (var_SOCKET != INVALID_SOCKET)
{
func_unk(var_SOCKET);
}
if (var_BOOL)
{
WSACleanup();
}
}
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

static void func_static_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5!=5)
{
func_unk("");
}
else
{
strcpy(var_char_ptr, "");
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

static void func_static_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5==5)
{
strcpy(var_char_ptr, "");
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

void func_void()
{
func_unk();
func_unk();
}

void func_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5==5)
{
{
WSADATA var_WSADATA;
BOOL var_BOOL = FALSE;
SOCKET var_SOCKET = INVALID_SOCKET;
SOCKET var_SOCKET = INVALID_SOCKET;
struct sockaddr_in var_struct_sockaddr_in;
int var_int;
do
{
if (WSAStartup(MAKEWORD(2,2), &var_WSADATA) != NO_ERROR)
{
break;
}
var_BOOL = 1;
var_SOCKET = socket(PF_INET, SOCK_STREAM, 0);
if (var_SOCKET == INVALID_SOCKET)
{
break;
}
memset(&var_struct_sockaddr_in, 0, sizeof(var_struct_sockaddr_in));
var_struct_sockaddr_in.var_unk = AF_INET;
var_struct_sockaddr_in.var_unk.var_unk = INADDR_ANY;
var_struct_sockaddr_in.var_unk = func_unk(LISTEN_PORT);
if (SOCKET_ERROR == func_unk(var_SOCKET, (struct var_unk*)&var_struct_sockaddr_in, sizeof(var_struct_sockaddr_in)))
{
break;
}
if (SOCKET_ERROR == func_unk(var_SOCKET, LISTEN_BACKLOG))
{
break;
}
var_SOCKET = func_SOCKET(var_SOCKET, NULL, NULL);
if (var_SOCKET == INVALID_SOCKET)
{
break;
}
var_int = recv(var_SOCKET, var_char_ptr, 100 - 1, 0);
if (var_int == SOCKET_ERROR || var_int == 0)
{
break;
}
var_char_ptr[var_int] = '';
}
while (0);
if (var_SOCKET != INVALID_SOCKET)
{
func_unk(var_SOCKET);
}
if (var_SOCKET != INVALID_SOCKET)
{
func_unk(var_SOCKET);
}
if (var_BOOL)
{
WSACleanup();
}
}
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

static void func_static_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5!=5)
{
func_unk("");
}
else
{
strcpy(var_char_ptr, "");
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

static void func_static_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5==5)
{
strcpy(var_char_ptr, "");
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

void func_void()
{
func_unk();
func_unk();
}

void func_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5==5)
{
{
WSADATA var_WSADATA;
BOOL var_BOOL = FALSE;
SOCKET var_SOCKET = INVALID_SOCKET;
SOCKET var_SOCKET = INVALID_SOCKET;
struct sockaddr_in var_struct_sockaddr_in;
int var_int;
do
{
if (WSAStartup(MAKEWORD(2,2), &var_WSADATA) != NO_ERROR)
{
break;
}
var_BOOL = 1;
var_SOCKET = socket(PF_INET, SOCK_STREAM, 0);
if (var_SOCKET == INVALID_SOCKET)
{
break;
}
memset(&var_struct_sockaddr_in, 0, sizeof(var_struct_sockaddr_in));
var_struct_sockaddr_in.var_unk = AF_INET;
var_struct_sockaddr_in.var_unk.var_unk = INADDR_ANY;
var_struct_sockaddr_in.var_unk = func_unk(LISTEN_PORT);
if (SOCKET_ERROR == func_unk(var_SOCKET, (struct var_unk*)&var_struct_sockaddr_in, sizeof(var_struct_sockaddr_in)))
{
break;
}
if (SOCKET_ERROR == func_unk(var_SOCKET, LISTEN_BACKLOG))
{
break;
}
var_SOCKET = func_SOCKET(var_SOCKET, NULL, NULL);
if (var_SOCKET == INVALID_SOCKET)
{
break;
}
var_int = recv(var_SOCKET, var_char_ptr, 100 - 1, 0);
if (var_int == SOCKET_ERROR || var_int == 0)
{
break;
}
var_char_ptr[var_int] = '';
}
while (0);
if (var_SOCKET != INVALID_SOCKET)
{
func_unk(var_SOCKET);
}
if (var_SOCKET != INVALID_SOCKET)
{
func_unk(var_SOCKET);
}
if (var_BOOL)
{
WSACleanup();
}
}
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

static void func_static_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5!=5)
{
func_unk("");
}
else
{
strcpy(var_char_ptr, "");
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

static void func_static_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5==5)
{
strcpy(var_char_ptr, "");
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

void func_void()
{
func_unk();
func_unk();
}

void func_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5==5)
{
{
WSADATA var_WSADATA;
BOOL var_BOOL = FALSE;
SOCKET var_SOCKET = INVALID_SOCKET;
SOCKET var_SOCKET = INVALID_SOCKET;
struct sockaddr_in var_struct_sockaddr_in;
int var_int;
do
{
if (WSAStartup(MAKEWORD(2,2), &var_WSADATA) != NO_ERROR)
{
break;
}
var_BOOL = 1;
var_SOCKET = socket(PF_INET, SOCK_STREAM, 0);
if (var_SOCKET == INVALID_SOCKET)
{
break;
}
memset(&var_struct_sockaddr_in, 0, sizeof(var_struct_sockaddr_in));
var_struct_sockaddr_in.var_unk = AF_INET;
var_struct_sockaddr_in.var_unk.var_unk = INADDR_ANY;
var_struct_sockaddr_in.var_unk = func_unk(LISTEN_PORT);
if (SOCKET_ERROR == func_unk(var_SOCKET, (struct var_unk*)&var_struct_sockaddr_in, sizeof(var_struct_sockaddr_in)))
{
break;
}
if (SOCKET_ERROR == func_unk(var_SOCKET, LISTEN_BACKLOG))
{
break;
}
var_SOCKET = func_SOCKET(var_SOCKET, NULL, NULL);
if (var_SOCKET == INVALID_SOCKET)
{
break;
}
var_int = recv(var_SOCKET, var_char_ptr, 100 - 1, 0);
if (var_int == SOCKET_ERROR || var_int == 0)
{
break;
}
var_char_ptr[var_int] = '';
}
while (0);
if (var_SOCKET != INVALID_SOCKET)
{
func_unk(var_SOCKET);
}
if (var_SOCKET != INVALID_SOCKET)
{
func_unk(var_SOCKET);
}
if (var_BOOL)
{
WSACleanup();
}
}
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

static void func_static_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5!=5)
{
func_unk("");
}
else
{
strcpy(var_char_ptr, "");
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

static void func_static_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5==5)
{
strcpy(var_char_ptr, "");
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

void func_void()
{
func_unk();
func_unk();
}

void func_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5==5)
{
{
WSADATA var_WSADATA;
BOOL var_BOOL = FALSE;
SOCKET var_SOCKET = INVALID_SOCKET;
SOCKET var_SOCKET = INVALID_SOCKET;
struct sockaddr_in var_struct_sockaddr_in;
int var_int;
do
{
if (WSAStartup(MAKEWORD(2,2), &var_WSADATA) != NO_ERROR)
{
break;
}
var_BOOL = 1;
var_SOCKET = socket(PF_INET, SOCK_STREAM, 0);
if (var_SOCKET == INVALID_SOCKET)
{
break;
}
memset(&var_struct_sockaddr_in, 0, sizeof(var_struct_sockaddr_in));
var_struct_sockaddr_in.var_unk = AF_INET;
var_struct_sockaddr_in.var_unk.var_unk = INADDR_ANY;
var_struct_sockaddr_in.var_unk = func_unk(LISTEN_PORT);
if (SOCKET_ERROR == func_unk(var_SOCKET, (struct var_unk*)&var_struct_sockaddr_in, sizeof(var_struct_sockaddr_in)))
{
break;
}
if (SOCKET_ERROR == func_unk(var_SOCKET, LISTEN_BACKLOG))
{
break;
}
var_SOCKET = func_SOCKET(var_SOCKET, NULL, NULL);
if (var_SOCKET == INVALID_SOCKET)
{
break;
}
var_int = recv(var_SOCKET, var_char_ptr, 100 - 1, 0);
if (var_int == SOCKET_ERROR || var_int == 0)
{
break;
}
var_char_ptr[var_int] = '';
}
while (0);
if (var_SOCKET != INVALID_SOCKET)
{
func_unk(var_SOCKET);
}
if (var_SOCKET != INVALID_SOCKET)
{
func_unk(var_SOCKET);
}
if (var_BOOL)
{
WSACleanup();
}
}
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

void func_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5==5)
{
{
WSADATA var_WSADATA;
BOOL var_BOOL = FALSE;
SOCKET var_SOCKET = INVALID_SOCKET;
SOCKET var_SOCKET = INVALID_SOCKET;
struct sockaddr_in var_struct_sockaddr_in;
int var_int;
do
{
if (WSAStartup(MAKEWORD(2,2), &var_WSADATA) != NO_ERROR)
{
break;
}
var_BOOL = 1;
var_SOCKET = socket(PF_INET, SOCK_STREAM, 0);
if (var_SOCKET == INVALID_SOCKET)
{
break;
}
memset(&var_struct_sockaddr_in, 0, sizeof(var_struct_sockaddr_in));
var_struct_sockaddr_in.var_unk = AF_INET;
var_struct_sockaddr_in.var_unk.var_unk = INADDR_ANY;
var_struct_sockaddr_in.var_unk = func_unk(LISTEN_PORT);
if (SOCKET_ERROR == func_unk(var_SOCKET, (struct var_unk*)&var_struct_sockaddr_in, sizeof(var_struct_sockaddr_in)))
{
break;
}
if (SOCKET_ERROR == func_unk(var_SOCKET, LISTEN_BACKLOG))
{
break;
}
var_SOCKET = func_SOCKET(var_SOCKET, NULL, NULL);
if (var_SOCKET == INVALID_SOCKET)
{
break;
}
var_int = recv(var_SOCKET, var_char_ptr, 100 - 1, 0);
if (var_int == SOCKET_ERROR || var_int == 0)
{
break;
}
var_char_ptr[var_int] = '';
}
while (0);
if (var_SOCKET != INVALID_SOCKET)
{
func_unk(var_SOCKET);
}
if (var_SOCKET != INVALID_SOCKET)
{
func_unk(var_SOCKET);
}
if (var_BOOL)
{
WSACleanup();
}
}
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

static void func_static_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5!=5)
{
func_unk("");
}
else
{
strcpy(var_char_ptr, "");
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

static void func_static_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5==5)
{
strcpy(var_char_ptr, "");
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

void func_void()
{
func_unk();
func_unk();
}

void func_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5==5)
{
{
WSADATA var_WSADATA;
BOOL var_BOOL = FALSE;
SOCKET var_SOCKET = INVALID_SOCKET;
SOCKET var_SOCKET = INVALID_SOCKET;
struct sockaddr_in var_struct_sockaddr_in;
int var_int;
do
{
if (WSAStartup(MAKEWORD(2,2), &var_WSADATA) != NO_ERROR)
{
break;
}
var_BOOL = 1;
var_SOCKET = socket(PF_INET, SOCK_STREAM, 0);
if (var_SOCKET == INVALID_SOCKET)
{
break;
}
memset(&var_struct_sockaddr_in, 0, sizeof(var_struct_sockaddr_in));
var_struct_sockaddr_in.var_unk = AF_INET;
var_struct_sockaddr_in.var_unk.var_unk = INADDR_ANY;
var_struct_sockaddr_in.var_unk = func_unk(LISTEN_PORT);
if (SOCKET_ERROR == func_unk(var_SOCKET, (struct var_unk*)&var_struct_sockaddr_in, sizeof(var_struct_sockaddr_in)))
{
break;
}
if (SOCKET_ERROR == func_unk(var_SOCKET, LISTEN_BACKLOG))
{
break;
}
var_SOCKET = func_SOCKET(var_SOCKET, NULL, NULL);
if (var_SOCKET == INVALID_SOCKET)
{
break;
}
var_int = recv(var_SOCKET, var_char_ptr, 100 - 1, 0);
if (var_int == SOCKET_ERROR || var_int == 0)
{
break;
}
var_char_ptr[var_int] = '';
}
while (0);
if (var_SOCKET != INVALID_SOCKET)
{
func_unk(var_SOCKET);
}
if (var_SOCKET != INVALID_SOCKET)
{
func_unk(var_SOCKET);
}
if (var_BOOL)
{
WSACleanup();
}
}
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

static void func_static_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5!=5)
{
func_unk("");
}
else
{
strcpy(var_char_ptr, "");
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

static void func_static_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5==5)
{
strcpy(var_char_ptr, "");
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

void func_void()
{
func_unk();
func_unk();
}

void func_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5==5)
{
{
WSADATA var_WSADATA;
BOOL var_BOOL = FALSE;
SOCKET var_SOCKET = INVALID_SOCKET;
SOCKET var_SOCKET = INVALID_SOCKET;
struct sockaddr_in var_struct_sockaddr_in;
int var_int;
do
{
if (WSAStartup(MAKEWORD(2,2), &var_WSADATA) != NO_ERROR)
{
break;
}
var_BOOL = 1;
var_SOCKET = socket(PF_INET, SOCK_STREAM, 0);
if (var_SOCKET == INVALID_SOCKET)
{
break;
}
memset(&var_struct_sockaddr_in, 0, sizeof(var_struct_sockaddr_in));
var_struct_sockaddr_in.var_unk = AF_INET;
var_struct_sockaddr_in.var_unk.var_unk = INADDR_ANY;
var_struct_sockaddr_in.var_unk = func_unk(LISTEN_PORT);
if (SOCKET_ERROR == func_unk(var_SOCKET, (struct var_unk*)&var_struct_sockaddr_in, sizeof(var_struct_sockaddr_in)))
{
break;
}
if (SOCKET_ERROR == func_unk(var_SOCKET, LISTEN_BACKLOG))
{
break;
}
var_SOCKET = func_SOCKET(var_SOCKET, NULL, NULL);
if (var_SOCKET == INVALID_SOCKET)
{
break;
}
var_int = recv(var_SOCKET, var_char_ptr, 100 - 1, 0);
if (var_int == SOCKET_ERROR || var_int == 0)
{
break;
}
var_char_ptr[var_int] = '';
}
while (0);
if (var_SOCKET != INVALID_SOCKET)
{
func_unk(var_SOCKET);
}
if (var_SOCKET != INVALID_SOCKET)
{
func_unk(var_SOCKET);
}
if (var_BOOL)
{
WSACleanup();
}
}
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

static void func_static_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5!=5)
{
func_unk("");
}
else
{
strcpy(var_char_ptr, "");
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

static void func_static_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5==5)
{
strcpy(var_char_ptr, "");
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

void func_void()
{
func_unk();
func_unk();
}

void func_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5==5)
{
{
WSADATA var_WSADATA;
BOOL var_BOOL = FALSE;
SOCKET var_SOCKET = INVALID_SOCKET;
SOCKET var_SOCKET = INVALID_SOCKET;
struct sockaddr_in var_struct_sockaddr_in;
int var_int;
do
{
if (WSAStartup(MAKEWORD(2,2), &var_WSADATA) != NO_ERROR)
{
break;
}
var_BOOL = 1;
var_SOCKET = socket(PF_INET, SOCK_STREAM, 0);
if (var_SOCKET == INVALID_SOCKET)
{
break;
}
memset(&var_struct_sockaddr_in, 0, sizeof(var_struct_sockaddr_in));
var_struct_sockaddr_in.var_unk = AF_INET;
var_struct_sockaddr_in.var_unk.var_unk = INADDR_ANY;
var_struct_sockaddr_in.var_unk = func_unk(LISTEN_PORT);
if (SOCKET_ERROR == func_unk(var_SOCKET, (struct var_unk*)&var_struct_sockaddr_in, sizeof(var_struct_sockaddr_in)))
{
break;
}
if (SOCKET_ERROR == func_unk(var_SOCKET, LISTEN_BACKLOG))
{
break;
}
var_SOCKET = func_SOCKET(var_SOCKET, NULL, NULL);
if (var_SOCKET == INVALID_SOCKET)
{
break;
}
var_int = recv(var_SOCKET, var_char_ptr, 100 - 1, 0);
if (var_int == SOCKET_ERROR || var_int == 0)
{
break;
}
var_char_ptr[var_int] = '';
}
while (0);
if (var_SOCKET != INVALID_SOCKET)
{
func_unk(var_SOCKET);
}
if (var_SOCKET != INVALID_SOCKET)
{
func_unk(var_SOCKET);
}
if (var_BOOL)
{
WSACleanup();
}
}
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

static void func_static_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5!=5)
{
func_unk("");
}
else
{
strcpy(var_char_ptr, "");
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

static void func_static_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5==5)
{
strcpy(var_char_ptr, "");
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

void func_void()
{
func_unk();
func_unk();
}

void func_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5==5)
{
{
WSADATA var_WSADATA;
BOOL var_BOOL = FALSE;
SOCKET var_SOCKET = INVALID_SOCKET;
SOCKET var_SOCKET = INVALID_SOCKET;
struct sockaddr_in var_struct_sockaddr_in;
int var_int;
do
{
if (WSAStartup(MAKEWORD(2,2), &var_WSADATA) != NO_ERROR)
{
break;
}
var_BOOL = 1;
var_SOCKET = socket(PF_INET, SOCK_STREAM, 0);
if (var_SOCKET == INVALID_SOCKET)
{
break;
}
memset(&var_struct_sockaddr_in, 0, sizeof(var_struct_sockaddr_in));
var_struct_sockaddr_in.var_unk = AF_INET;
var_struct_sockaddr_in.var_unk.var_unk = INADDR_ANY;
var_struct_sockaddr_in.var_unk = func_unk(LISTEN_PORT);
if (SOCKET_ERROR == func_unk(var_SOCKET, (struct var_unk*)&var_struct_sockaddr_in, sizeof(var_struct_sockaddr_in)))
{
break;
}
if (SOCKET_ERROR == func_unk(var_SOCKET, LISTEN_BACKLOG))
{
break;
}
var_SOCKET = func_SOCKET(var_SOCKET, NULL, NULL);
if (var_SOCKET == INVALID_SOCKET)
{
break;
}
var_int = recv(var_SOCKET, var_char_ptr, 100 - 1, 0);
if (var_int == SOCKET_ERROR || var_int == 0)
{
break;
}
var_char_ptr[var_int] = '';
}
while (0);
if (var_SOCKET != INVALID_SOCKET)
{
func_unk(var_SOCKET);
}
if (var_SOCKET != INVALID_SOCKET)
{
func_unk(var_SOCKET);
}
if (var_BOOL)
{
WSACleanup();
}
}
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

static void func_static_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5!=5)
{
func_unk("");
}
else
{
strcpy(var_char_ptr, "");
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

static void func_static_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5==5)
{
strcpy(var_char_ptr, "");
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

void func_void()
{
func_unk();
func_unk();
}

void func_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5==5)
{
{
WSADATA var_WSADATA;
BOOL var_BOOL = FALSE;
SOCKET var_SOCKET = INVALID_SOCKET;
SOCKET var_SOCKET = INVALID_SOCKET;
struct sockaddr_in var_struct_sockaddr_in;
int var_int;
do
{
if (WSAStartup(MAKEWORD(2,2), &var_WSADATA) != NO_ERROR)
{
break;
}
var_BOOL = 1;
var_SOCKET = socket(PF_INET, SOCK_STREAM, 0);
if (var_SOCKET == INVALID_SOCKET)
{
break;
}
memset(&var_struct_sockaddr_in, 0, sizeof(var_struct_sockaddr_in));
var_struct_sockaddr_in.var_unk = AF_INET;
var_struct_sockaddr_in.var_unk.var_unk = INADDR_ANY;
var_struct_sockaddr_in.var_unk = func_unk(LISTEN_PORT);
if (SOCKET_ERROR == func_unk(var_SOCKET, (struct var_unk*)&var_struct_sockaddr_in, sizeof(var_struct_sockaddr_in)))
{
break;
}
if (SOCKET_ERROR == func_unk(var_SOCKET, LISTEN_BACKLOG))
{
break;
}
var_SOCKET = func_SOCKET(var_SOCKET, NULL, NULL);
if (var_SOCKET == INVALID_SOCKET)
{
break;
}
var_int = recv(var_SOCKET, var_char_ptr, 100 - 1, 0);
if (var_int == SOCKET_ERROR || var_int == 0)
{
break;
}
var_char_ptr[var_int] = '';
}
while (0);
if (var_SOCKET != INVALID_SOCKET)
{
func_unk(var_SOCKET);
}
if (var_SOCKET != INVALID_SOCKET)
{
func_unk(var_SOCKET);
}
if (var_BOOL)
{
WSACleanup();
}
}
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

static void func_static_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5!=5)
{
func_unk("");
}
else
{
strcpy(var_char_ptr, "");
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

static void func_static_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5==5)
{
strcpy(var_char_ptr, "");
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

void func_void()
{
func_unk();
func_unk();
}

void func_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5==5)
{
{
WSADATA var_WSADATA;
BOOL var_BOOL = FALSE;
SOCKET var_SOCKET = INVALID_SOCKET;
SOCKET var_SOCKET = INVALID_SOCKET;
struct sockaddr_in var_struct_sockaddr_in;
int var_int;
do
{
if (WSAStartup(MAKEWORD(2,2), &var_WSADATA) != NO_ERROR)
{
break;
}
var_BOOL = 1;
var_SOCKET = socket(PF_INET, SOCK_STREAM, 0);
if (var_SOCKET == INVALID_SOCKET)
{
break;
}
memset(&var_struct_sockaddr_in, 0, sizeof(var_struct_sockaddr_in));
var_struct_sockaddr_in.var_unk = AF_INET;
var_struct_sockaddr_in.var_unk.var_unk = INADDR_ANY;
var_struct_sockaddr_in.var_unk = func_unk(LISTEN_PORT);
if (SOCKET_ERROR == func_unk(var_SOCKET, (struct var_unk*)&var_struct_sockaddr_in, sizeof(var_struct_sockaddr_in)))
{
break;
}
if (SOCKET_ERROR == func_unk(var_SOCKET, LISTEN_BACKLOG))
{
break;
}
var_SOCKET = func_SOCKET(var_SOCKET, NULL, NULL);
if (var_SOCKET == INVALID_SOCKET)
{
break;
}
var_int = recv(var_SOCKET, var_char_ptr, 100 - 1, 0);
if (var_int == SOCKET_ERROR || var_int == 0)
{
break;
}
var_char_ptr[var_int] = '';
}
while (0);
if (var_SOCKET != INVALID_SOCKET)
{
func_unk(var_SOCKET);
}
if (var_SOCKET != INVALID_SOCKET)
{
func_unk(var_SOCKET);
}
if (var_BOOL)
{
WSACleanup();
}
}
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

static void func_static_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5!=5)
{
func_unk("");
}
else
{
strcpy(var_char_ptr, "");
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

static void func_static_void()
{
char * var_char_ptr;
char var_char_array[100] = "";
var_char_ptr = var_char_array;
if(5==5)
{
strcpy(var_char_ptr, "");
}
if (!func_unk(var_char_ptr))
{
func_unk("");
func_unk(1);
}
}

void func_void()
{
func_unk();
func_unk();
}

